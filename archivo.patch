 (cd "$(git rev-parse --show-toplevel)" && git apply --3way <<'EOF' 
diff --git a/AfipNative/WsaaReference.vb b/AfipNative/WsaaReference.vb
new file mode 100644
index 0000000000000000000000000000000000000000..b9514d64e2647a840e1c3746071a340b7122a974
--- /dev/null
+++ b/AfipNative/WsaaReference.vb
@@ -0,0 +1,150 @@
+'AfipNative/WsaaReference.vb'
+﻿'------------------------------------------------------------------------------
+' <auto-generated>
+'     Este código fue generado por una herramienta.
+'     Versión de runtime:4.0.30319.42000
+'
+'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
+'     se vuelve a generar el código.
+' </auto-generated>
+'------------------------------------------------------------------------------
+
+Option Strict Off
+Option Explicit On
+
+Imports System
+Imports System.ComponentModel
+Imports System.Diagnostics
+Imports System.Web.Services
+Imports System.Web.Services.Protocols
+Imports System.Xml.Serialization
+
+'
+'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
+'
+Namespace Wsaa
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Web.Services.WebServiceBindingAttribute(Name:="LoginCmsSoapBinding", [Namespace]:="https://wsaahomo.afip.gov.ar/ws/services/LoginCms")>  _
+    Partial Public Class LoginCMSService
+        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
+        
+        Private loginCmsOperationCompleted As System.Threading.SendOrPostCallback
+        
+        Private useDefaultCredentialsSetExplicitly As Boolean
+        
+        '''<remarks/>
+        Public Sub New()
+            MyBase.New
+            Me.Url = Global.ClienteLoginCms.My.MySettings.Default.ClienteLoginCms_Wsaa_LoginCMSService
+            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
+                Me.UseDefaultCredentials = true
+                Me.useDefaultCredentialsSetExplicitly = false
+            Else
+                Me.useDefaultCredentialsSetExplicitly = true
+            End If
+        End Sub
+        
+        Public Shadows Property Url() As String
+            Get
+                Return MyBase.Url
+            End Get
+            Set
+                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
+                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
+                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
+                    MyBase.UseDefaultCredentials = false
+                End If
+                MyBase.Url = value
+            End Set
+        End Property
+        
+        Public Shadows Property UseDefaultCredentials() As Boolean
+            Get
+                Return MyBase.UseDefaultCredentials
+            End Get
+            Set
+                MyBase.UseDefaultCredentials = value
+                Me.useDefaultCredentialsSetExplicitly = true
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Event loginCmsCompleted As loginCmsCompletedEventHandler
+        
+        '''<remarks/>
+        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace:="http://wsaa.view.sua.dvadac.desein.afip.gov", ResponseNamespace:="http://wsaa.view.sua.dvadac.desein.afip.gov", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
+        Public Function loginCms(ByVal in0 As String) As <System.Xml.Serialization.XmlElementAttribute("loginCmsReturn")> String
+            Dim results() As Object = Me.Invoke("loginCms", New Object() {in0})
+            Return CType(results(0),String)
+        End Function
+        
+        '''<remarks/>
+        Public Overloads Sub loginCmsAsync(ByVal in0 As String)
+            Me.loginCmsAsync(in0, Nothing)
+        End Sub
+        
+        '''<remarks/>
+        Public Overloads Sub loginCmsAsync(ByVal in0 As String, ByVal userState As Object)
+            If (Me.loginCmsOperationCompleted Is Nothing) Then
+                Me.loginCmsOperationCompleted = AddressOf Me.OnloginCmsOperationCompleted
+            End If
+            Me.InvokeAsync("loginCms", New Object() {in0}, Me.loginCmsOperationCompleted, userState)
+        End Sub
+        
+        Private Sub OnloginCmsOperationCompleted(ByVal arg As Object)
+            If (Not (Me.loginCmsCompletedEvent) Is Nothing) Then
+                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
+                RaiseEvent loginCmsCompleted(Me, New loginCmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
+            End If
+        End Sub
+        
+        '''<remarks/>
+        Public Shadows Sub CancelAsync(ByVal userState As Object)
+            MyBase.CancelAsync(userState)
+        End Sub
+        
+        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
+            If ((url Is Nothing)  _
+                        OrElse (url Is String.Empty)) Then
+                Return false
+            End If
+            Dim wsUri As System.Uri = New System.Uri(url)
+            If ((wsUri.Port >= 1024)  _
+                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
+                Return true
+            End If
+            Return false
+        End Function
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
+    Public Delegate Sub loginCmsCompletedEventHandler(ByVal sender As Object, ByVal e As loginCmsCompletedEventArgs)
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code")>  _
+    Partial Public Class loginCmsCompletedEventArgs
+        Inherits System.ComponentModel.AsyncCompletedEventArgs
+        
+        Private results() As Object
+        
+        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
+            MyBase.New(exception, cancelled, userState)
+            Me.results = results
+        End Sub
+        
+        '''<remarks/>
+        Public ReadOnly Property Result() As String
+            Get
+                Me.RaiseExceptionIfNecessary
+                Return CType(Me.results(0),String)
+            End Get
+        End Property
+    End Class
+End Namespace
diff --git a/DROil.vbproj b/DROil.vbproj
index 5d4e45db87dd8cac48a753dbc4b27571a2d0e4f4..201d9291e0c21827d3ae7bb37a5802623f56293e 100644
--- a/DROil.vbproj
+++ b/DROil.vbproj
@@ -94,50 +94,51 @@
       <HintPath>packages\Microsoft.ReportingServices.ReportViewerControl.Winforms.150.1484.0\lib\net40\Microsoft.ReportViewer.DataVisualization.dll</HintPath>
     </Reference>
     <Reference Include="Microsoft.ReportViewer.Design, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
       <HintPath>packages\Microsoft.ReportingServices.ReportViewerControl.Winforms.150.1484.0\lib\net40\Microsoft.ReportViewer.Design.dll</HintPath>
     </Reference>
     <Reference Include="Microsoft.ReportViewer.ProcessingObjectModel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
       <HintPath>packages\Microsoft.ReportingServices.ReportViewerControl.Winforms.150.1484.0\lib\net40\Microsoft.ReportViewer.ProcessingObjectModel.dll</HintPath>
     </Reference>
     <Reference Include="Microsoft.ReportViewer.WinForms, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
       <HintPath>packages\Microsoft.ReportingServices.ReportViewerControl.Winforms.150.1484.0\lib\net40\Microsoft.ReportViewer.WinForms.dll</HintPath>
     </Reference>
     <Reference Include="Microsoft.SqlServer.Types, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
       <HintPath>packages\Microsoft.SqlServer.Types.14.0.1016.290\lib\net40\Microsoft.SqlServer.Types.dll</HintPath>
     </Reference>
     <Reference Include="Newtonsoft.Json, Version=13.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
       <HintPath>packages\Newtonsoft.Json.13.0.1\lib\net45\Newtonsoft.Json.dll</HintPath>
     </Reference>
     <Reference Include="System" />
     <Reference Include="System.Data" />
     <Reference Include="System.Deployment" />
     <Reference Include="System.Drawing" />
     <Reference Include="System.Web.Services" />
     <Reference Include="System.Windows.Forms" />
     <Reference Include="System.Xml" />
     <Reference Include="System.Core" />
+    <Reference Include="System.Security" />
     <Reference Include="System.Xml.Linq" />
     <Reference Include="System.Data.DataSetExtensions" />
   </ItemGroup>
   <ItemGroup>
     <Import Include="Microsoft.VisualBasic" />
     <Import Include="System" />
     <Import Include="System.Collections" />
     <Import Include="System.Collections.Generic" />
     <Import Include="System.Data" />
     <Import Include="System.Drawing" />
     <Import Include="System.Diagnostics" />
     <Import Include="System.Windows.Forms" />
     <Import Include="System.Linq" />
     <Import Include="System.Xml.Linq" />
     <Import Include="System.Threading.Tasks" />
   </ItemGroup>
   <ItemGroup>
     <Compile Include="clases\clsauto.vb" />
     <Compile Include="clases\clscaja.vb" />
     <Compile Include="clases\clscambio.vb" />
     <Compile Include="clases\clscliente.vb" />
     <Compile Include="clases\clscomprobante.vb" />
     <Compile Include="clases\clscondicion.vb" />
     <Compile Include="clases\clsconfig.vb" />
     <Compile Include="clases\clsconfiguracion.vb" />
@@ -521,50 +522,51 @@
     <Compile Include="My Project\AssemblyInfo.vb" />
     <Compile Include="My Project\Application.Designer.vb">
       <AutoGen>True</AutoGen>
       <DependentUpon>Application.myapp</DependentUpon>
     </Compile>
     <Compile Include="My Project\Resources.Designer.vb">
       <AutoGen>True</AutoGen>
       <DesignTime>True</DesignTime>
       <DependentUpon>Resources.resx</DependentUpon>
     </Compile>
     <Compile Include="My Project\Settings.Designer.vb">
       <AutoGen>True</AutoGen>
       <DependentUpon>Settings.settings</DependentUpon>
       <DesignTimeSharedInput>True</DesignTimeSharedInput>
     </Compile>
     <Compile Include="Módulos\archivos.vb" />
     <Compile Include="Módulos\autoajuste.vb" />
     <Compile Include="Módulos\configuracion_regional.vb" />
     <Compile Include="Módulos\factura_electronica.vb" />
     <Compile Include="Módulos\general.vb" />
     <Compile Include="Módulos\LeeCotizacionDolar.vb" />
     <Compile Include="Módulos\mconfig.vb" />
     <Compile Include="Módulos\afip_native.vb" />
     <Compile Include="AfipNative\LoginTicket.vb" />
     <Compile Include="AfipNative\WsfeReference.vb" />
+    <Compile Include="AfipNative\WsaaReference.vb" />
   </ItemGroup>
   <ItemGroup>
     <EmbeddedResource Include="Formularios\advancesearch.resx">
       <DependentUpon>advancesearch.vb</DependentUpon>
     </EmbeddedResource>
     <EmbeddedResource Include="Formularios\Agregar\add_auto.resx">
       <DependentUpon>add_auto.vb</DependentUpon>
     </EmbeddedResource>
     <EmbeddedResource Include="Formularios\Agregar\add_caja.resx">
       <DependentUpon>add_caja.vb</DependentUpon>
     </EmbeddedResource>
     <EmbeddedResource Include="Formularios\Agregar\add_caso.resx">
       <DependentUpon>add_caso.vb</DependentUpon>
     </EmbeddedResource>
     <EmbeddedResource Include="Formularios\Agregar\add_cliente.resx">
       <DependentUpon>add_cliente.vb</DependentUpon>
     </EmbeddedResource>
     <EmbeddedResource Include="Formularios\Agregar\add_comprobante.resx">
       <DependentUpon>add_comprobante.vb</DependentUpon>
     </EmbeddedResource>
     <EmbeddedResource Include="Formularios\Agregar\add_condicion.resx">
       <DependentUpon>add_condicion.vb</DependentUpon>
     </EmbeddedResource>
     <EmbeddedResource Include="Formularios\Agregar\add_consulta.resx">
       <DependentUpon>add_consulta.vb</DependentUpon>
diff --git "a/M\303\263dulos/factura_electronica.vb" "b/M\303\263dulos/factura_electronica.vb"
index e62e59c4e6f6d96963cb5df06f584e965520b25d..a4dab77558197e238dbb95e65d71bb7f75e09ee3 100644
--- "a/M\303\263dulos/factura_electronica.vb"
+++ "b/M\303\263dulos/factura_electronica.vb"
@@ -144,50 +144,82 @@ Module factura
 
         For I = 1 To Cod.Length
             If I Mod 2 = 0 Then
                 ' Si el valor de I es par entra por aca
                 Pares = Pares + CLng(Mid(Cod, I, 1))
             Else
                 'Si el valor de I es impar entra por aca
                 Impares = Impares + CLng(Mid(Cod, I, 1))
             End If
         Next I
 
         'Me.TxtImpares.Text = Impares
         'Me.TxtPares.Text = Pares
         'Me.Txt3Impares.Text = 3 * CLng(Me.TxtImpares.Text)
         Impares3 = 3 * CLng(Impares)
         'Me.TxtTotal.Text = CLng(Me.TxtPares.Text) + CLng(Me.Txt3Impares.Text)
         Total = CLng(Pares) + CLng(Impares3)
 
         'Me.TxtDigito.Text = 10 - (CLng(Me.TxtTotal.Text) Mod 10)
         digitoVerificador = 10 - (CLng(Total) Mod 10)
 
         'Me.TxtCodBarraF.Text = Cod & Me.TxtDigito.Text
         codigoDeBarras = Cod & digitoVerificador
         Return codigoDeBarras
     End Function
+
+    Public Sub Consultar_Comprobante(ByVal pVenta As Integer, ByVal tipo_comprobante As Integer, ByVal nComprobante As String)
+        If Not inicialesFE(False) Then
+            MsgBox("Hubo un problema al inicializar el webservice, puede ser un problema de certificados", vbCritical + vbOKOnly, "Centrex")
+            Exit Sub
+        End If
+
+        Dim urlWsaa As String = "https://wsaa.afip.gov.ar/ws/services/LoginCms?WSDL"
+        Dim urlWsfe As String = "https://servicios1.afip.gov.ar/wsfev1/service.asmx"
+        Dim ticket As LoginTicket = ObtenerTicket("wsfe", urlWsaa, archivo_certificado, password_certificado)
+        Dim svc As New wsfev1.Service()
+        svc.Url = urlWsfe
+        Dim auth As New wsfev1.FEAuthRequest()
+        auth.Token = ticket.Token
+        auth.Sign = ticket.Sign
+        auth.Cuit = CLng(cuit_emisor)
+
+        Dim req As New wsfev1.FECompConsultaReq()
+        req.PtoVta = pVenta
+        req.CbteTipo = tipo_comprobante
+        req.CbteNro = CLng(nComprobante)
+
+        Dim resp As wsfev1.FECompConsultaResponse = svc.FECompConsultar(auth, req)
+
+        If resp.Errors Is Nothing Then
+            Dim respuestaCAE As String = "CAE consultado: " & resp.ResultGet.CodAutorizacion & vbCrLf
+            respuestaCAE += "Total: " & resp.ResultGet.ImpTotal.ToString()
+            MsgBox(respuestaCAE, vbInformation + vbOKOnly, "Centrex")
+        Else
+            MsgBox("Fallo la consulta con el siguiente error:" & resp.Errors(0).Msg)
+        End If
+    End Sub
     Public Function consultaUltimoComprobante(ByVal puntoVenta As String, ByVal tipoComprobante As String, ByVal esTest As Boolean) As Integer
         If Not inicialesFE(esTest) Then
             Return -1
         End If
 
         Dim urlWsaa As String = If(esTest, "https://wsaahomo.afip.gov.ar/ws/services/LoginCms?WSDL", "https://wsaa.afip.gov.ar/ws/services/LoginCms?WSDL")
         Dim urlWsfe As String = If(esTest, "https://wswhomo.afip.gov.ar/wsfev1/service.asmx", "https://servicios1.afip.gov.ar/wsfev1/service.asmx")
         Dim ticket As LoginTicket = ObtenerTicket("wsfe", urlWsaa, archivo_certificado, password_certificado)
         Dim svc As New wsfev1.Service()
         svc.Url = urlWsfe
         Dim auth As New wsfev1.FEAuthRequest()
         auth.Token = ticket.Token
         auth.Sign = ticket.Sign
         auth.Cuit = CLng(cuit_emisor)
         Dim resp As wsfev1.FERecuperaLastCbteResponse = svc.FECompUltimoAutorizado(auth, puntoVenta, tipoComprobante)
         Return resp.CbteNro
     End Function
 
 
     Private Function inicialesFE(ByVal esTest As Boolean) As Boolean
         pc = SystemInformation.ComputerName
 
         If esTest Then
             Select Case pc
                 Case Is = "JARVIS"
 
EOF
)