 (cd "$(git rev-parse --show-toplevel)" && git apply --3way <<'EOF' 
diff --git a/AfipNative/LoginTicket.vb b/AfipNative/LoginTicket.vb
new file mode 100644
index 0000000000000000000000000000000000000000..77a2a41bf36678ccbfcb9f11d2f9fd5ad8ff0ca5
--- /dev/null
+++ b/AfipNative/LoginTicket.vb
@@ -0,0 +1,226 @@
+'AfipNative/LoginTicket.vb'
+Class LoginTicket
+
+    Public UniqueId As UInt32 ' Entero de 32 bits sin signo que identifica el requerimiento
+    Public GenerationTime As DateTime ' Momento en que fue generado el requerimiento
+    Public ExpirationTime As DateTime ' Momento en el que exoira la solicitud
+    Public Service As String ' Identificacion del WSN para el cual se solicita el TA
+    Public Sign As String ' Firma de seguridad recibida en la respuesta
+    Public Token As String ' Token de seguridad recibido en la respuesta
+
+    Public XmlLoginTicketRequest As XmlDocument = Nothing
+    Public XmlLoginTicketResponse As XmlDocument = Nothing
+    Public RutaDelCertificadoFirmante As String
+    Public XmlStrLoginTicketRequestTemplate As String = "<loginTicketRequest><header><uniqueId></uniqueId><generationTime></generationTime><expirationTime></expirationTime></header><service></service></loginTicketRequest>"
+
+    Private _verboseMode As Boolean = True
+
+    Private Shared _globalUniqueID As UInt32 = 0 ' OJO! NO ES THREAD-SAFE
+
+    ''' <summary>
+    ''' Construye un Login Ticket obtenido del WSAA
+    ''' </summary>
+    ''' <param name="argServicio">Servicio al que se desea acceder</param>
+    ''' <param name="argUrlWsaa">URL del WSAA</param>
+    ''' <param name="argRutaCertX509Firmante">Ruta del certificado X509 (con clave privada) usado para firmar</param>
+    ''' <param name="argPassword">Password del certificado X509 (con clave privada) usado para firmar</param>
+    ''' <param name="argProxy">IP:port del proxy</param>
+    ''' <param name="argProxyUser">Usuario del proxy</param>''' 
+    ''' <param name="argProxyPassword">Password del proxy</param>
+    ''' <param name="argVerbose">Nivel detallado de descripcion? true/false</param>
+    ''' <remarks></remarks>
+    Public Function ObtenerLoginTicketResponse( _
+    ByVal argServicio As String, _
+    ByVal argUrlWsaa As String, _
+    ByVal argRutaCertX509Firmante As String, _
+    ByVal argPassword As SecureString, _
+    ByVal argProxy As String, _
+    ByVal argProxyUser As String, _
+    ByVal argProxyPassword As String, _
+    ByVal argVerbose As Boolean _
+    ) As String
+
+        Me.RutaDelCertificadoFirmante = argRutaCertX509Firmante
+        Me._verboseMode = argVerbose
+        CertificadosX509Lib.VerboseMode = argVerbose
+
+        Dim cmsFirmadoBase64 As String
+        Dim loginTicketResponse As String
+        Dim xmlNodoUniqueId As XmlNode
+        Dim xmlNodoGenerationTime As XmlNode
+        Dim xmlNodoExpirationTime As XmlNode
+        Dim xmlNodoService As XmlNode
+
+        ' PASO 1: Genero el Login Ticket Request
+        Try
+            _globalUniqueID += 1
+
+            XmlLoginTicketRequest = New XmlDocument()
+            XmlLoginTicketRequest.LoadXml(XmlStrLoginTicketRequestTemplate)
+
+            xmlNodoUniqueId = XmlLoginTicketRequest.SelectSingleNode("//uniqueId")
+            xmlNodoGenerationTime = XmlLoginTicketRequest.SelectSingleNode("//generationTime")
+            xmlNodoExpirationTime = XmlLoginTicketRequest.SelectSingleNode("//expirationTime")
+            xmlNodoService = XmlLoginTicketRequest.SelectSingleNode("//service")
+
+            xmlNodoGenerationTime.InnerText = DateTime.Now.AddMinutes(-10).ToString("s")
+            xmlNodoExpirationTime.InnerText = DateTime.Now.AddMinutes(+10).ToString("s")
+            xmlNodoUniqueId.InnerText = CStr(_globalUniqueID)
+            xmlNodoService.InnerText = argServicio
+            Me.Service = argServicio
+
+            If Me._verboseMode Then
+                Console.WriteLine(XmlLoginTicketRequest.OuterXml)
+            End If
+
+        Catch excepcionAlGenerarLoginTicketRequest As Exception
+            Throw New Exception("***Error GENERANDO el LoginTicketRequest : " + excepcionAlGenerarLoginTicketRequest.Message + excepcionAlGenerarLoginTicketRequest.StackTrace)
+        End Try
+
+        ' PASO 2: Firmo el Login Ticket Request
+        Try
+            If Me._verboseMode Then
+                Console.WriteLine("***Leyendo certificado: {0}", RutaDelCertificadoFirmante)
+            End If
+
+            Dim certFirmante As X509Certificate2 = CertificadosX509Lib.ObtieneCertificadoDesdeArchivo(RutaDelCertificadoFirmante, argPassword)
+
+            If Me._verboseMode Then
+                Console.WriteLine("***Firmando: ")
+                Console.WriteLine(XmlLoginTicketRequest.OuterXml)
+            End If
+
+            ' Convierto el login ticket request a bytes, para firmar
+            Dim EncodedMsg As Encoding = Encoding.UTF8
+            Dim msgBytes As Byte() = EncodedMsg.GetBytes(XmlLoginTicketRequest.OuterXml)
+
+            ' Firmo el msg y paso a Base64
+            Dim encodedSignedCms As Byte() = CertificadosX509Lib.FirmaBytesMensaje(msgBytes, certFirmante)
+            cmsFirmadoBase64 = Convert.ToBase64String(encodedSignedCms)
+
+        Catch excepcionAlFirmar As Exception
+            Throw New Exception("***Error FIRMANDO el LoginTicketRequest : " + excepcionAlFirmar.Message)
+        End Try
+
+        ' PASO 3: Invoco al WSAA para obtener el Login Ticket Response
+        Try
+            If Me._verboseMode Then
+                Console.WriteLine("***Llamando al WSAA en URL: {0}", argUrlWsaa)
+                Console.WriteLine("***Argumento en el request:")
+                Console.WriteLine(cmsFirmadoBase64)
+            End If
+
+            Dim servicioWsaa As New Wsaa.LoginCMSService()
+            servicioWsaa.Url = argUrlWsaa
+            If argProxy IsNot Nothing Then
+                servicioWsaa.Proxy = New WebProxy(argProxy, True)
+                If argProxyUser IsNot Nothing Then
+                    Dim Credentials As New NetworkCredential(argProxyUser, argProxyPassword)
+                    servicioWsaa.Proxy.Credentials = Credentials
+                End If
+            End If
+            loginTicketResponse = servicioWsaa.loginCms(cmsFirmadoBase64)
+
+            If Me._verboseMode Then
+                Console.WriteLine("***LoguinTicketResponse: ")
+                Console.WriteLine(loginTicketResponse)
+            End If
+
+        Catch excepcionAlInvocarWsaa As Exception
+            Throw New Exception("***Error INVOCANDO al servicio WSAA : " + excepcionAlInvocarWsaa.Message)
+        End Try
+
+
+        ' PASO 4: Analizo el Login Ticket Response recibido del WSAA
+        Try
+            XmlLoginTicketResponse = New XmlDocument()
+            XmlLoginTicketResponse.LoadXml(loginTicketResponse)
+
+            Me.UniqueId = UInt32.Parse(XmlLoginTicketResponse.SelectSingleNode("//uniqueId").InnerText)
+            Me.GenerationTime = DateTime.Parse(XmlLoginTicketResponse.SelectSingleNode("//generationTime").InnerText)
+            Me.ExpirationTime = DateTime.Parse(XmlLoginTicketResponse.SelectSingleNode("//expirationTime").InnerText)
+            Me.Sign = XmlLoginTicketResponse.SelectSingleNode("//sign").InnerText
+            Me.Token = XmlLoginTicketResponse.SelectSingleNode("//token").InnerText
+        Catch excepcionAlAnalizarLoginTicketResponse As Exception
+            Throw New Exception("***Error ANALIZANDO el LoginTicketResponse : " + excepcionAlAnalizarLoginTicketResponse.Message)
+        End Try
+
+        Return loginTicketResponse
+
+    End Function
+
+
+End Class
+
+''' <summary>
+''' Libreria de utilidades para manejo de certificados
+''' </summary>
+''' <remarks></remarks>
+Class CertificadosX509Lib
+
+    Public Shared VerboseMode As Boolean = False
+
+    ''' <summary>
+    ''' Firma mensaje
+    ''' </summary>
+    ''' <param name="argBytesMsg">Bytes del mensaje</param>
+    ''' <param name="argCertFirmante">Certificado usado para firmar</param>
+    ''' <returns>Bytes del mensaje firmado</returns>
+    ''' <remarks></remarks>
+    Public Shared Function FirmaBytesMensaje( _
+    ByVal argBytesMsg As Byte(), _
+    ByVal argCertFirmante As X509Certificate2 _
+    ) As Byte()
+        Try
+            ' Pongo el mensaje en un objeto ContentInfo (requerido para construir el obj SignedCms)
+            Dim infoContenido As New ContentInfo(argBytesMsg)
+            Dim cmsFirmado As New SignedCms(infoContenido)
+
+            ' Creo objeto CmsSigner que tiene las caracteristicas del firmante
+            Dim cmsFirmante As New CmsSigner(argCertFirmante)
+            cmsFirmante.IncludeOption = X509IncludeOption.EndCertOnly
+
+            If VerboseMode Then
+                Console.WriteLine("***Firmando bytes del mensaje...")
+            End If
+            ' Firmo el mensaje PKCS #7
+            cmsFirmado.ComputeSignature(cmsFirmante)
+
+            If VerboseMode Then
+                Console.WriteLine("***OK mensaje firmado")
+            End If
+
+            ' Encodeo el mensaje PKCS #7.
+            Return cmsFirmado.Encode()
+        Catch excepcionAlFirmar As Exception
+            Throw New Exception("***Error al firmar: " & excepcionAlFirmar.Message)
+            Return Nothing
+        End Try
+    End Function
+
+    ''' <summary>
+    ''' Lee certificado de disco
+    ''' </summary>
+    ''' <param name="argArchivo">Ruta del certificado a leer.</param>
+    ''' <returns>Un objeto certificado X509</returns>
+    ''' <remarks></remarks>
+    Public Shared Function ObtieneCertificadoDesdeArchivo( _
+    ByVal argArchivo As String, _
+    ByVal argPassword As SecureString _
+    ) As X509Certificate2
+        Dim objCert As New X509Certificate2
+        Try
+            If argPassword.IsReadOnly Then
+                objCert.Import(My.Computer.FileSystem.ReadAllBytes(argArchivo), argPassword, X509KeyStorageFlags.PersistKeySet)
+            Else
+                objCert.Import(My.Computer.FileSystem.ReadAllBytes(argArchivo))
+            End If
+            Return objCert
+        Catch excepcionAlImportarCertificado As Exception
+            Throw New Exception(excepcionAlImportarCertificado.Message & " " & excepcionAlImportarCertificado.StackTrace)
+            Return Nothing
+        End Try
+    End Function
+
+End Class
+
diff --git a/AfipNative/WsfeReference.vb b/AfipNative/WsfeReference.vb
new file mode 100644
index 0000000000000000000000000000000000000000..a905ca8fe9e2baecb47b8f1b33770658e139656d
--- /dev/null
+++ b/AfipNative/WsfeReference.vb
@@ -0,0 +1,3910 @@
+'AfipNative/WsfeReference.vb'
+﻿'------------------------------------------------------------------------------
+' <auto-generated>
+'     This code was generated by a tool.
+'     Runtime Version:4.0.30319.296
+'
+'     Changes to this file may cause incorrect behavior and will be lost if
+'     the code is regenerated.
+' </auto-generated>
+'------------------------------------------------------------------------------
+
+Option Strict Off
+Option Explicit On
+
+Imports System
+Imports System.ComponentModel
+Imports System.Diagnostics
+Imports System.Web.Services
+Imports System.Web.Services.Protocols
+Imports System.Xml.Serialization
+
+'
+'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.296.
+'
+Namespace wsfev1
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Web.Services.WebServiceBindingAttribute(Name:="ServiceSoap", [Namespace]:="http://ar.gov.afip.dif.FEV1/"),  _
+     System.Xml.Serialization.XmlIncludeAttribute(GetType(FEDetResponse)),  _
+     System.Xml.Serialization.XmlIncludeAttribute(GetType(FECabResponse)),  _
+     System.Xml.Serialization.XmlIncludeAttribute(GetType(FEDetRequest)),  _
+     System.Xml.Serialization.XmlIncludeAttribute(GetType(FECabRequest))>  _
+    Partial Public Class Service
+        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
+        
+        Private FECAESolicitarOperationCompleted As System.Threading.SendOrPostCallback
+        
+        Private FECompTotXRequestOperationCompleted As System.Threading.SendOrPostCallback
+        
+        Private FEDummyOperationCompleted As System.Threading.SendOrPostCallback
+        
+        Private FECompUltimoAutorizadoOperationCompleted As System.Threading.SendOrPostCallback
+        
+        Private FECompConsultarOperationCompleted As System.Threading.SendOrPostCallback
+        
+        Private FECAEARegInformativoOperationCompleted As System.Threading.SendOrPostCallback
+        
+        Private FECAEASolicitarOperationCompleted As System.Threading.SendOrPostCallback
+        
+        Private FECAEASinMovimientoConsultarOperationCompleted As System.Threading.SendOrPostCallback
+        
+        Private FECAEASinMovimientoInformarOperationCompleted As System.Threading.SendOrPostCallback
+        
+        Private FECAEAConsultarOperationCompleted As System.Threading.SendOrPostCallback
+        
+        Private FEParamGetCotizacionOperationCompleted As System.Threading.SendOrPostCallback
+        
+        Private FEParamGetTiposTributosOperationCompleted As System.Threading.SendOrPostCallback
+        
+        Private FEParamGetTiposMonedasOperationCompleted As System.Threading.SendOrPostCallback
+        
+        Private FEParamGetTiposIvaOperationCompleted As System.Threading.SendOrPostCallback
+        
+        Private FEParamGetTiposOpcionalOperationCompleted As System.Threading.SendOrPostCallback
+        
+        Private FEParamGetTiposConceptoOperationCompleted As System.Threading.SendOrPostCallback
+        
+        Private FEParamGetPtosVentaOperationCompleted As System.Threading.SendOrPostCallback
+        
+        Private FEParamGetTiposCbteOperationCompleted As System.Threading.SendOrPostCallback
+        
+        Private FEParamGetTiposDocOperationCompleted As System.Threading.SendOrPostCallback
+        
+        Private useDefaultCredentialsSetExplicitly As Boolean
+        
+        '''<remarks/>
+        Public Sub New()
+            MyBase.New
+            Me.Url = Global.wsfev1_cliente.My.MySettings.Default.wsfev1_cliente_wsfev1_Service
+            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
+                Me.UseDefaultCredentials = true
+                Me.useDefaultCredentialsSetExplicitly = false
+            Else
+                Me.useDefaultCredentialsSetExplicitly = true
+            End If
+        End Sub
+        
+        Public Shadows Property Url() As String
+            Get
+                Return MyBase.Url
+            End Get
+            Set
+                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
+                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
+                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
+                    MyBase.UseDefaultCredentials = false
+                End If
+                MyBase.Url = value
+            End Set
+        End Property
+        
+        Public Shadows Property UseDefaultCredentials() As Boolean
+            Get
+                Return MyBase.UseDefaultCredentials
+            End Get
+            Set
+                MyBase.UseDefaultCredentials = value
+                Me.useDefaultCredentialsSetExplicitly = true
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Event FECAESolicitarCompleted As FECAESolicitarCompletedEventHandler
+        
+        '''<remarks/>
+        Public Event FECompTotXRequestCompleted As FECompTotXRequestCompletedEventHandler
+        
+        '''<remarks/>
+        Public Event FEDummyCompleted As FEDummyCompletedEventHandler
+        
+        '''<remarks/>
+        Public Event FECompUltimoAutorizadoCompleted As FECompUltimoAutorizadoCompletedEventHandler
+        
+        '''<remarks/>
+        Public Event FECompConsultarCompleted As FECompConsultarCompletedEventHandler
+        
+        '''<remarks/>
+        Public Event FECAEARegInformativoCompleted As FECAEARegInformativoCompletedEventHandler
+        
+        '''<remarks/>
+        Public Event FECAEASolicitarCompleted As FECAEASolicitarCompletedEventHandler
+        
+        '''<remarks/>
+        Public Event FECAEASinMovimientoConsultarCompleted As FECAEASinMovimientoConsultarCompletedEventHandler
+        
+        '''<remarks/>
+        Public Event FECAEASinMovimientoInformarCompleted As FECAEASinMovimientoInformarCompletedEventHandler
+        
+        '''<remarks/>
+        Public Event FECAEAConsultarCompleted As FECAEAConsultarCompletedEventHandler
+        
+        '''<remarks/>
+        Public Event FEParamGetCotizacionCompleted As FEParamGetCotizacionCompletedEventHandler
+        
+        '''<remarks/>
+        Public Event FEParamGetTiposTributosCompleted As FEParamGetTiposTributosCompletedEventHandler
+        
+        '''<remarks/>
+        Public Event FEParamGetTiposMonedasCompleted As FEParamGetTiposMonedasCompletedEventHandler
+        
+        '''<remarks/>
+        Public Event FEParamGetTiposIvaCompleted As FEParamGetTiposIvaCompletedEventHandler
+        
+        '''<remarks/>
+        Public Event FEParamGetTiposOpcionalCompleted As FEParamGetTiposOpcionalCompletedEventHandler
+        
+        '''<remarks/>
+        Public Event FEParamGetTiposConceptoCompleted As FEParamGetTiposConceptoCompletedEventHandler
+        
+        '''<remarks/>
+        Public Event FEParamGetPtosVentaCompleted As FEParamGetPtosVentaCompletedEventHandler
+        
+        '''<remarks/>
+        Public Event FEParamGetTiposCbteCompleted As FEParamGetTiposCbteCompletedEventHandler
+        
+        '''<remarks/>
+        Public Event FEParamGetTiposDocCompleted As FEParamGetTiposDocCompletedEventHandler
+        
+        '''<remarks/>
+        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ar.gov.afip.dif.FEV1/FECAESolicitar", RequestNamespace:="http://ar.gov.afip.dif.FEV1/", ResponseNamespace:="http://ar.gov.afip.dif.FEV1/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
+        Public Function FECAESolicitar(ByVal Auth As FEAuthRequest, ByVal FeCAEReq As FECAERequest) As FECAEResponse
+            Dim results() As Object = Me.Invoke("FECAESolicitar", New Object() {Auth, FeCAEReq})
+            Return CType(results(0),FECAEResponse)
+        End Function
+        
+        '''<remarks/>
+        Public Overloads Sub FECAESolicitarAsync(ByVal Auth As FEAuthRequest, ByVal FeCAEReq As FECAERequest)
+            Me.FECAESolicitarAsync(Auth, FeCAEReq, Nothing)
+        End Sub
+        
+        '''<remarks/>
+        Public Overloads Sub FECAESolicitarAsync(ByVal Auth As FEAuthRequest, ByVal FeCAEReq As FECAERequest, ByVal userState As Object)
+            If (Me.FECAESolicitarOperationCompleted Is Nothing) Then
+                Me.FECAESolicitarOperationCompleted = AddressOf Me.OnFECAESolicitarOperationCompleted
+            End If
+            Me.InvokeAsync("FECAESolicitar", New Object() {Auth, FeCAEReq}, Me.FECAESolicitarOperationCompleted, userState)
+        End Sub
+        
+        Private Sub OnFECAESolicitarOperationCompleted(ByVal arg As Object)
+            If (Not (Me.FECAESolicitarCompletedEvent) Is Nothing) Then
+                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
+                RaiseEvent FECAESolicitarCompleted(Me, New FECAESolicitarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
+            End If
+        End Sub
+        
+        '''<remarks/>
+        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ar.gov.afip.dif.FEV1/FECompTotXRequest", RequestNamespace:="http://ar.gov.afip.dif.FEV1/", ResponseNamespace:="http://ar.gov.afip.dif.FEV1/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
+        Public Function FECompTotXRequest(ByVal Auth As FEAuthRequest) As FERegXReqResponse
+            Dim results() As Object = Me.Invoke("FECompTotXRequest", New Object() {Auth})
+            Return CType(results(0),FERegXReqResponse)
+        End Function
+        
+        '''<remarks/>
+        Public Overloads Sub FECompTotXRequestAsync(ByVal Auth As FEAuthRequest)
+            Me.FECompTotXRequestAsync(Auth, Nothing)
+        End Sub
+        
+        '''<remarks/>
+        Public Overloads Sub FECompTotXRequestAsync(ByVal Auth As FEAuthRequest, ByVal userState As Object)
+            If (Me.FECompTotXRequestOperationCompleted Is Nothing) Then
+                Me.FECompTotXRequestOperationCompleted = AddressOf Me.OnFECompTotXRequestOperationCompleted
+            End If
+            Me.InvokeAsync("FECompTotXRequest", New Object() {Auth}, Me.FECompTotXRequestOperationCompleted, userState)
+        End Sub
+        
+        Private Sub OnFECompTotXRequestOperationCompleted(ByVal arg As Object)
+            If (Not (Me.FECompTotXRequestCompletedEvent) Is Nothing) Then
+                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
+                RaiseEvent FECompTotXRequestCompleted(Me, New FECompTotXRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
+            End If
+        End Sub
+        
+        '''<remarks/>
+        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ar.gov.afip.dif.FEV1/FEDummy", RequestNamespace:="http://ar.gov.afip.dif.FEV1/", ResponseNamespace:="http://ar.gov.afip.dif.FEV1/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
+        Public Function FEDummy() As DummyResponse
+            Dim results() As Object = Me.Invoke("FEDummy", New Object(-1) {})
+            Return CType(results(0),DummyResponse)
+        End Function
+        
+        '''<remarks/>
+        Public Overloads Sub FEDummyAsync()
+            Me.FEDummyAsync(Nothing)
+        End Sub
+        
+        '''<remarks/>
+        Public Overloads Sub FEDummyAsync(ByVal userState As Object)
+            If (Me.FEDummyOperationCompleted Is Nothing) Then
+                Me.FEDummyOperationCompleted = AddressOf Me.OnFEDummyOperationCompleted
+            End If
+            Me.InvokeAsync("FEDummy", New Object(-1) {}, Me.FEDummyOperationCompleted, userState)
+        End Sub
+        
+        Private Sub OnFEDummyOperationCompleted(ByVal arg As Object)
+            If (Not (Me.FEDummyCompletedEvent) Is Nothing) Then
+                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
+                RaiseEvent FEDummyCompleted(Me, New FEDummyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
+            End If
+        End Sub
+        
+        '''<remarks/>
+        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ar.gov.afip.dif.FEV1/FECompUltimoAutorizado", RequestNamespace:="http://ar.gov.afip.dif.FEV1/", ResponseNamespace:="http://ar.gov.afip.dif.FEV1/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
+        Public Function FECompUltimoAutorizado(ByVal Auth As FEAuthRequest, ByVal PtoVta As Integer, ByVal CbteTipo As Integer) As FERecuperaLastCbteResponse
+            Dim results() As Object = Me.Invoke("FECompUltimoAutorizado", New Object() {Auth, PtoVta, CbteTipo})
+            Return CType(results(0),FERecuperaLastCbteResponse)
+        End Function
+        
+        '''<remarks/>
+        Public Overloads Sub FECompUltimoAutorizadoAsync(ByVal Auth As FEAuthRequest, ByVal PtoVta As Integer, ByVal CbteTipo As Integer)
+            Me.FECompUltimoAutorizadoAsync(Auth, PtoVta, CbteTipo, Nothing)
+        End Sub
+        
+        '''<remarks/>
+        Public Overloads Sub FECompUltimoAutorizadoAsync(ByVal Auth As FEAuthRequest, ByVal PtoVta As Integer, ByVal CbteTipo As Integer, ByVal userState As Object)
+            If (Me.FECompUltimoAutorizadoOperationCompleted Is Nothing) Then
+                Me.FECompUltimoAutorizadoOperationCompleted = AddressOf Me.OnFECompUltimoAutorizadoOperationCompleted
+            End If
+            Me.InvokeAsync("FECompUltimoAutorizado", New Object() {Auth, PtoVta, CbteTipo}, Me.FECompUltimoAutorizadoOperationCompleted, userState)
+        End Sub
+        
+        Private Sub OnFECompUltimoAutorizadoOperationCompleted(ByVal arg As Object)
+            If (Not (Me.FECompUltimoAutorizadoCompletedEvent) Is Nothing) Then
+                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
+                RaiseEvent FECompUltimoAutorizadoCompleted(Me, New FECompUltimoAutorizadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
+            End If
+        End Sub
+        
+        '''<remarks/>
+        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ar.gov.afip.dif.FEV1/FECompConsultar", RequestNamespace:="http://ar.gov.afip.dif.FEV1/", ResponseNamespace:="http://ar.gov.afip.dif.FEV1/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
+        Public Function FECompConsultar(ByVal Auth As FEAuthRequest, ByVal FeCompConsReq As FECompConsultaReq) As FECompConsultaResponse
+            Dim results() As Object = Me.Invoke("FECompConsultar", New Object() {Auth, FeCompConsReq})
+            Return CType(results(0),FECompConsultaResponse)
+        End Function
+        
+        '''<remarks/>
+        Public Overloads Sub FECompConsultarAsync(ByVal Auth As FEAuthRequest, ByVal FeCompConsReq As FECompConsultaReq)
+            Me.FECompConsultarAsync(Auth, FeCompConsReq, Nothing)
+        End Sub
+        
+        '''<remarks/>
+        Public Overloads Sub FECompConsultarAsync(ByVal Auth As FEAuthRequest, ByVal FeCompConsReq As FECompConsultaReq, ByVal userState As Object)
+            If (Me.FECompConsultarOperationCompleted Is Nothing) Then
+                Me.FECompConsultarOperationCompleted = AddressOf Me.OnFECompConsultarOperationCompleted
+            End If
+            Me.InvokeAsync("FECompConsultar", New Object() {Auth, FeCompConsReq}, Me.FECompConsultarOperationCompleted, userState)
+        End Sub
+        
+        Private Sub OnFECompConsultarOperationCompleted(ByVal arg As Object)
+            If (Not (Me.FECompConsultarCompletedEvent) Is Nothing) Then
+                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
+                RaiseEvent FECompConsultarCompleted(Me, New FECompConsultarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
+            End If
+        End Sub
+        
+        '''<remarks/>
+        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ar.gov.afip.dif.FEV1/FECAEARegInformativo", RequestNamespace:="http://ar.gov.afip.dif.FEV1/", ResponseNamespace:="http://ar.gov.afip.dif.FEV1/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
+        Public Function FECAEARegInformativo(ByVal Auth As FEAuthRequest, ByVal FeCAEARegInfReq As FECAEARequest) As FECAEAResponse
+            Dim results() As Object = Me.Invoke("FECAEARegInformativo", New Object() {Auth, FeCAEARegInfReq})
+            Return CType(results(0),FECAEAResponse)
+        End Function
+        
+        '''<remarks/>
+        Public Overloads Sub FECAEARegInformativoAsync(ByVal Auth As FEAuthRequest, ByVal FeCAEARegInfReq As FECAEARequest)
+            Me.FECAEARegInformativoAsync(Auth, FeCAEARegInfReq, Nothing)
+        End Sub
+        
+        '''<remarks/>
+        Public Overloads Sub FECAEARegInformativoAsync(ByVal Auth As FEAuthRequest, ByVal FeCAEARegInfReq As FECAEARequest, ByVal userState As Object)
+            If (Me.FECAEARegInformativoOperationCompleted Is Nothing) Then
+                Me.FECAEARegInformativoOperationCompleted = AddressOf Me.OnFECAEARegInformativoOperationCompleted
+            End If
+            Me.InvokeAsync("FECAEARegInformativo", New Object() {Auth, FeCAEARegInfReq}, Me.FECAEARegInformativoOperationCompleted, userState)
+        End Sub
+        
+        Private Sub OnFECAEARegInformativoOperationCompleted(ByVal arg As Object)
+            If (Not (Me.FECAEARegInformativoCompletedEvent) Is Nothing) Then
+                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
+                RaiseEvent FECAEARegInformativoCompleted(Me, New FECAEARegInformativoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
+            End If
+        End Sub
+        
+        '''<remarks/>
+        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ar.gov.afip.dif.FEV1/FECAEASolicitar", RequestNamespace:="http://ar.gov.afip.dif.FEV1/", ResponseNamespace:="http://ar.gov.afip.dif.FEV1/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
+        Public Function FECAEASolicitar(ByVal Auth As FEAuthRequest, ByVal Periodo As Integer, ByVal Orden As Short) As FECAEAGetResponse
+            Dim results() As Object = Me.Invoke("FECAEASolicitar", New Object() {Auth, Periodo, Orden})
+            Return CType(results(0),FECAEAGetResponse)
+        End Function
+        
+        '''<remarks/>
+        Public Overloads Sub FECAEASolicitarAsync(ByVal Auth As FEAuthRequest, ByVal Periodo As Integer, ByVal Orden As Short)
+            Me.FECAEASolicitarAsync(Auth, Periodo, Orden, Nothing)
+        End Sub
+        
+        '''<remarks/>
+        Public Overloads Sub FECAEASolicitarAsync(ByVal Auth As FEAuthRequest, ByVal Periodo As Integer, ByVal Orden As Short, ByVal userState As Object)
+            If (Me.FECAEASolicitarOperationCompleted Is Nothing) Then
+                Me.FECAEASolicitarOperationCompleted = AddressOf Me.OnFECAEASolicitarOperationCompleted
+            End If
+            Me.InvokeAsync("FECAEASolicitar", New Object() {Auth, Periodo, Orden}, Me.FECAEASolicitarOperationCompleted, userState)
+        End Sub
+        
+        Private Sub OnFECAEASolicitarOperationCompleted(ByVal arg As Object)
+            If (Not (Me.FECAEASolicitarCompletedEvent) Is Nothing) Then
+                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
+                RaiseEvent FECAEASolicitarCompleted(Me, New FECAEASolicitarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
+            End If
+        End Sub
+        
+        '''<remarks/>
+        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ar.gov.afip.dif.FEV1/FECAEASinMovimientoConsultar", RequestNamespace:="http://ar.gov.afip.dif.FEV1/", ResponseNamespace:="http://ar.gov.afip.dif.FEV1/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
+        Public Function FECAEASinMovimientoConsultar(ByVal Auth As FEAuthRequest, ByVal CAEA As String, ByVal PtoVta As Integer) As FECAEASinMovConsResponse
+            Dim results() As Object = Me.Invoke("FECAEASinMovimientoConsultar", New Object() {Auth, CAEA, PtoVta})
+            Return CType(results(0),FECAEASinMovConsResponse)
+        End Function
+        
+        '''<remarks/>
+        Public Overloads Sub FECAEASinMovimientoConsultarAsync(ByVal Auth As FEAuthRequest, ByVal CAEA As String, ByVal PtoVta As Integer)
+            Me.FECAEASinMovimientoConsultarAsync(Auth, CAEA, PtoVta, Nothing)
+        End Sub
+        
+        '''<remarks/>
+        Public Overloads Sub FECAEASinMovimientoConsultarAsync(ByVal Auth As FEAuthRequest, ByVal CAEA As String, ByVal PtoVta As Integer, ByVal userState As Object)
+            If (Me.FECAEASinMovimientoConsultarOperationCompleted Is Nothing) Then
+                Me.FECAEASinMovimientoConsultarOperationCompleted = AddressOf Me.OnFECAEASinMovimientoConsultarOperationCompleted
+            End If
+            Me.InvokeAsync("FECAEASinMovimientoConsultar", New Object() {Auth, CAEA, PtoVta}, Me.FECAEASinMovimientoConsultarOperationCompleted, userState)
+        End Sub
+        
+        Private Sub OnFECAEASinMovimientoConsultarOperationCompleted(ByVal arg As Object)
+            If (Not (Me.FECAEASinMovimientoConsultarCompletedEvent) Is Nothing) Then
+                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
+                RaiseEvent FECAEASinMovimientoConsultarCompleted(Me, New FECAEASinMovimientoConsultarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
+            End If
+        End Sub
+        
+        '''<remarks/>
+        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ar.gov.afip.dif.FEV1/FECAEASinMovimientoInformar", RequestNamespace:="http://ar.gov.afip.dif.FEV1/", ResponseNamespace:="http://ar.gov.afip.dif.FEV1/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
+        Public Function FECAEASinMovimientoInformar(ByVal Auth As FEAuthRequest, ByVal PtoVta As Integer, ByVal CAEA As String) As FECAEASinMovResponse
+            Dim results() As Object = Me.Invoke("FECAEASinMovimientoInformar", New Object() {Auth, PtoVta, CAEA})
+            Return CType(results(0),FECAEASinMovResponse)
+        End Function
+        
+        '''<remarks/>
+        Public Overloads Sub FECAEASinMovimientoInformarAsync(ByVal Auth As FEAuthRequest, ByVal PtoVta As Integer, ByVal CAEA As String)
+            Me.FECAEASinMovimientoInformarAsync(Auth, PtoVta, CAEA, Nothing)
+        End Sub
+        
+        '''<remarks/>
+        Public Overloads Sub FECAEASinMovimientoInformarAsync(ByVal Auth As FEAuthRequest, ByVal PtoVta As Integer, ByVal CAEA As String, ByVal userState As Object)
+            If (Me.FECAEASinMovimientoInformarOperationCompleted Is Nothing) Then
+                Me.FECAEASinMovimientoInformarOperationCompleted = AddressOf Me.OnFECAEASinMovimientoInformarOperationCompleted
+            End If
+            Me.InvokeAsync("FECAEASinMovimientoInformar", New Object() {Auth, PtoVta, CAEA}, Me.FECAEASinMovimientoInformarOperationCompleted, userState)
+        End Sub
+        
+        Private Sub OnFECAEASinMovimientoInformarOperationCompleted(ByVal arg As Object)
+            If (Not (Me.FECAEASinMovimientoInformarCompletedEvent) Is Nothing) Then
+                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
+                RaiseEvent FECAEASinMovimientoInformarCompleted(Me, New FECAEASinMovimientoInformarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
+            End If
+        End Sub
+        
+        '''<remarks/>
+        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ar.gov.afip.dif.FEV1/FECAEAConsultar", RequestNamespace:="http://ar.gov.afip.dif.FEV1/", ResponseNamespace:="http://ar.gov.afip.dif.FEV1/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
+        Public Function FECAEAConsultar(ByVal Auth As FEAuthRequest, ByVal Periodo As Integer, ByVal Orden As Short) As FECAEAGetResponse
+            Dim results() As Object = Me.Invoke("FECAEAConsultar", New Object() {Auth, Periodo, Orden})
+            Return CType(results(0),FECAEAGetResponse)
+        End Function
+        
+        '''<remarks/>
+        Public Overloads Sub FECAEAConsultarAsync(ByVal Auth As FEAuthRequest, ByVal Periodo As Integer, ByVal Orden As Short)
+            Me.FECAEAConsultarAsync(Auth, Periodo, Orden, Nothing)
+        End Sub
+        
+        '''<remarks/>
+        Public Overloads Sub FECAEAConsultarAsync(ByVal Auth As FEAuthRequest, ByVal Periodo As Integer, ByVal Orden As Short, ByVal userState As Object)
+            If (Me.FECAEAConsultarOperationCompleted Is Nothing) Then
+                Me.FECAEAConsultarOperationCompleted = AddressOf Me.OnFECAEAConsultarOperationCompleted
+            End If
+            Me.InvokeAsync("FECAEAConsultar", New Object() {Auth, Periodo, Orden}, Me.FECAEAConsultarOperationCompleted, userState)
+        End Sub
+        
+        Private Sub OnFECAEAConsultarOperationCompleted(ByVal arg As Object)
+            If (Not (Me.FECAEAConsultarCompletedEvent) Is Nothing) Then
+                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
+                RaiseEvent FECAEAConsultarCompleted(Me, New FECAEAConsultarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
+            End If
+        End Sub
+        
+        '''<remarks/>
+        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ar.gov.afip.dif.FEV1/FEParamGetCotizacion", RequestNamespace:="http://ar.gov.afip.dif.FEV1/", ResponseNamespace:="http://ar.gov.afip.dif.FEV1/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
+        Public Function FEParamGetCotizacion(ByVal Auth As FEAuthRequest, ByVal MonId As String) As FECotizacionResponse
+            Dim results() As Object = Me.Invoke("FEParamGetCotizacion", New Object() {Auth, MonId})
+            Return CType(results(0),FECotizacionResponse)
+        End Function
+        
+        '''<remarks/>
+        Public Overloads Sub FEParamGetCotizacionAsync(ByVal Auth As FEAuthRequest, ByVal MonId As String)
+            Me.FEParamGetCotizacionAsync(Auth, MonId, Nothing)
+        End Sub
+        
+        '''<remarks/>
+        Public Overloads Sub FEParamGetCotizacionAsync(ByVal Auth As FEAuthRequest, ByVal MonId As String, ByVal userState As Object)
+            If (Me.FEParamGetCotizacionOperationCompleted Is Nothing) Then
+                Me.FEParamGetCotizacionOperationCompleted = AddressOf Me.OnFEParamGetCotizacionOperationCompleted
+            End If
+            Me.InvokeAsync("FEParamGetCotizacion", New Object() {Auth, MonId}, Me.FEParamGetCotizacionOperationCompleted, userState)
+        End Sub
+        
+        Private Sub OnFEParamGetCotizacionOperationCompleted(ByVal arg As Object)
+            If (Not (Me.FEParamGetCotizacionCompletedEvent) Is Nothing) Then
+                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
+                RaiseEvent FEParamGetCotizacionCompleted(Me, New FEParamGetCotizacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
+            End If
+        End Sub
+        
+        '''<remarks/>
+        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ar.gov.afip.dif.FEV1/FEParamGetTiposTributos", RequestNamespace:="http://ar.gov.afip.dif.FEV1/", ResponseNamespace:="http://ar.gov.afip.dif.FEV1/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
+        Public Function FEParamGetTiposTributos(ByVal Auth As FEAuthRequest) As FETributoResponse
+            Dim results() As Object = Me.Invoke("FEParamGetTiposTributos", New Object() {Auth})
+            Return CType(results(0),FETributoResponse)
+        End Function
+        
+        '''<remarks/>
+        Public Overloads Sub FEParamGetTiposTributosAsync(ByVal Auth As FEAuthRequest)
+            Me.FEParamGetTiposTributosAsync(Auth, Nothing)
+        End Sub
+        
+        '''<remarks/>
+        Public Overloads Sub FEParamGetTiposTributosAsync(ByVal Auth As FEAuthRequest, ByVal userState As Object)
+            If (Me.FEParamGetTiposTributosOperationCompleted Is Nothing) Then
+                Me.FEParamGetTiposTributosOperationCompleted = AddressOf Me.OnFEParamGetTiposTributosOperationCompleted
+            End If
+            Me.InvokeAsync("FEParamGetTiposTributos", New Object() {Auth}, Me.FEParamGetTiposTributosOperationCompleted, userState)
+        End Sub
+        
+        Private Sub OnFEParamGetTiposTributosOperationCompleted(ByVal arg As Object)
+            If (Not (Me.FEParamGetTiposTributosCompletedEvent) Is Nothing) Then
+                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
+                RaiseEvent FEParamGetTiposTributosCompleted(Me, New FEParamGetTiposTributosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
+            End If
+        End Sub
+        
+        '''<remarks/>
+        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ar.gov.afip.dif.FEV1/FEParamGetTiposMonedas", RequestNamespace:="http://ar.gov.afip.dif.FEV1/", ResponseNamespace:="http://ar.gov.afip.dif.FEV1/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
+        Public Function FEParamGetTiposMonedas(ByVal Auth As FEAuthRequest) As MonedaResponse
+            Dim results() As Object = Me.Invoke("FEParamGetTiposMonedas", New Object() {Auth})
+            Return CType(results(0),MonedaResponse)
+        End Function
+        
+        '''<remarks/>
+        Public Overloads Sub FEParamGetTiposMonedasAsync(ByVal Auth As FEAuthRequest)
+            Me.FEParamGetTiposMonedasAsync(Auth, Nothing)
+        End Sub
+        
+        '''<remarks/>
+        Public Overloads Sub FEParamGetTiposMonedasAsync(ByVal Auth As FEAuthRequest, ByVal userState As Object)
+            If (Me.FEParamGetTiposMonedasOperationCompleted Is Nothing) Then
+                Me.FEParamGetTiposMonedasOperationCompleted = AddressOf Me.OnFEParamGetTiposMonedasOperationCompleted
+            End If
+            Me.InvokeAsync("FEParamGetTiposMonedas", New Object() {Auth}, Me.FEParamGetTiposMonedasOperationCompleted, userState)
+        End Sub
+        
+        Private Sub OnFEParamGetTiposMonedasOperationCompleted(ByVal arg As Object)
+            If (Not (Me.FEParamGetTiposMonedasCompletedEvent) Is Nothing) Then
+                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
+                RaiseEvent FEParamGetTiposMonedasCompleted(Me, New FEParamGetTiposMonedasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
+            End If
+        End Sub
+        
+        '''<remarks/>
+        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ar.gov.afip.dif.FEV1/FEParamGetTiposIva", RequestNamespace:="http://ar.gov.afip.dif.FEV1/", ResponseNamespace:="http://ar.gov.afip.dif.FEV1/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
+        Public Function FEParamGetTiposIva(ByVal Auth As FEAuthRequest) As IvaTipoResponse
+            Dim results() As Object = Me.Invoke("FEParamGetTiposIva", New Object() {Auth})
+            Return CType(results(0),IvaTipoResponse)
+        End Function
+        
+        '''<remarks/>
+        Public Overloads Sub FEParamGetTiposIvaAsync(ByVal Auth As FEAuthRequest)
+            Me.FEParamGetTiposIvaAsync(Auth, Nothing)
+        End Sub
+        
+        '''<remarks/>
+        Public Overloads Sub FEParamGetTiposIvaAsync(ByVal Auth As FEAuthRequest, ByVal userState As Object)
+            If (Me.FEParamGetTiposIvaOperationCompleted Is Nothing) Then
+                Me.FEParamGetTiposIvaOperationCompleted = AddressOf Me.OnFEParamGetTiposIvaOperationCompleted
+            End If
+            Me.InvokeAsync("FEParamGetTiposIva", New Object() {Auth}, Me.FEParamGetTiposIvaOperationCompleted, userState)
+        End Sub
+        
+        Private Sub OnFEParamGetTiposIvaOperationCompleted(ByVal arg As Object)
+            If (Not (Me.FEParamGetTiposIvaCompletedEvent) Is Nothing) Then
+                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
+                RaiseEvent FEParamGetTiposIvaCompleted(Me, New FEParamGetTiposIvaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
+            End If
+        End Sub
+        
+        '''<remarks/>
+        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ar.gov.afip.dif.FEV1/FEParamGetTiposOpcional", RequestNamespace:="http://ar.gov.afip.dif.FEV1/", ResponseNamespace:="http://ar.gov.afip.dif.FEV1/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
+        Public Function FEParamGetTiposOpcional(ByVal Auth As FEAuthRequest) As OpcionalTipoResponse
+            Dim results() As Object = Me.Invoke("FEParamGetTiposOpcional", New Object() {Auth})
+            Return CType(results(0),OpcionalTipoResponse)
+        End Function
+        
+        '''<remarks/>
+        Public Overloads Sub FEParamGetTiposOpcionalAsync(ByVal Auth As FEAuthRequest)
+            Me.FEParamGetTiposOpcionalAsync(Auth, Nothing)
+        End Sub
+        
+        '''<remarks/>
+        Public Overloads Sub FEParamGetTiposOpcionalAsync(ByVal Auth As FEAuthRequest, ByVal userState As Object)
+            If (Me.FEParamGetTiposOpcionalOperationCompleted Is Nothing) Then
+                Me.FEParamGetTiposOpcionalOperationCompleted = AddressOf Me.OnFEParamGetTiposOpcionalOperationCompleted
+            End If
+            Me.InvokeAsync("FEParamGetTiposOpcional", New Object() {Auth}, Me.FEParamGetTiposOpcionalOperationCompleted, userState)
+        End Sub
+        
+        Private Sub OnFEParamGetTiposOpcionalOperationCompleted(ByVal arg As Object)
+            If (Not (Me.FEParamGetTiposOpcionalCompletedEvent) Is Nothing) Then
+                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
+                RaiseEvent FEParamGetTiposOpcionalCompleted(Me, New FEParamGetTiposOpcionalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
+            End If
+        End Sub
+        
+        '''<remarks/>
+        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ar.gov.afip.dif.FEV1/FEParamGetTiposConcepto", RequestNamespace:="http://ar.gov.afip.dif.FEV1/", ResponseNamespace:="http://ar.gov.afip.dif.FEV1/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
+        Public Function FEParamGetTiposConcepto(ByVal Auth As FEAuthRequest) As ConceptoTipoResponse
+            Dim results() As Object = Me.Invoke("FEParamGetTiposConcepto", New Object() {Auth})
+            Return CType(results(0),ConceptoTipoResponse)
+        End Function
+        
+        '''<remarks/>
+        Public Overloads Sub FEParamGetTiposConceptoAsync(ByVal Auth As FEAuthRequest)
+            Me.FEParamGetTiposConceptoAsync(Auth, Nothing)
+        End Sub
+        
+        '''<remarks/>
+        Public Overloads Sub FEParamGetTiposConceptoAsync(ByVal Auth As FEAuthRequest, ByVal userState As Object)
+            If (Me.FEParamGetTiposConceptoOperationCompleted Is Nothing) Then
+                Me.FEParamGetTiposConceptoOperationCompleted = AddressOf Me.OnFEParamGetTiposConceptoOperationCompleted
+            End If
+            Me.InvokeAsync("FEParamGetTiposConcepto", New Object() {Auth}, Me.FEParamGetTiposConceptoOperationCompleted, userState)
+        End Sub
+        
+        Private Sub OnFEParamGetTiposConceptoOperationCompleted(ByVal arg As Object)
+            If (Not (Me.FEParamGetTiposConceptoCompletedEvent) Is Nothing) Then
+                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
+                RaiseEvent FEParamGetTiposConceptoCompleted(Me, New FEParamGetTiposConceptoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
+            End If
+        End Sub
+        
+        '''<remarks/>
+        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ar.gov.afip.dif.FEV1/FEParamGetPtosVenta", RequestNamespace:="http://ar.gov.afip.dif.FEV1/", ResponseNamespace:="http://ar.gov.afip.dif.FEV1/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
+        Public Function FEParamGetPtosVenta(ByVal Auth As FEAuthRequest) As FEPtoVentaResponse
+            Dim results() As Object = Me.Invoke("FEParamGetPtosVenta", New Object() {Auth})
+            Return CType(results(0),FEPtoVentaResponse)
+        End Function
+        
+        '''<remarks/>
+        Public Overloads Sub FEParamGetPtosVentaAsync(ByVal Auth As FEAuthRequest)
+            Me.FEParamGetPtosVentaAsync(Auth, Nothing)
+        End Sub
+        
+        '''<remarks/>
+        Public Overloads Sub FEParamGetPtosVentaAsync(ByVal Auth As FEAuthRequest, ByVal userState As Object)
+            If (Me.FEParamGetPtosVentaOperationCompleted Is Nothing) Then
+                Me.FEParamGetPtosVentaOperationCompleted = AddressOf Me.OnFEParamGetPtosVentaOperationCompleted
+            End If
+            Me.InvokeAsync("FEParamGetPtosVenta", New Object() {Auth}, Me.FEParamGetPtosVentaOperationCompleted, userState)
+        End Sub
+        
+        Private Sub OnFEParamGetPtosVentaOperationCompleted(ByVal arg As Object)
+            If (Not (Me.FEParamGetPtosVentaCompletedEvent) Is Nothing) Then
+                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
+                RaiseEvent FEParamGetPtosVentaCompleted(Me, New FEParamGetPtosVentaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
+            End If
+        End Sub
+        
+        '''<remarks/>
+        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ar.gov.afip.dif.FEV1/FEParamGetTiposCbte", RequestNamespace:="http://ar.gov.afip.dif.FEV1/", ResponseNamespace:="http://ar.gov.afip.dif.FEV1/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
+        Public Function FEParamGetTiposCbte(ByVal Auth As FEAuthRequest) As CbteTipoResponse
+            Dim results() As Object = Me.Invoke("FEParamGetTiposCbte", New Object() {Auth})
+            Return CType(results(0),CbteTipoResponse)
+        End Function
+        
+        '''<remarks/>
+        Public Overloads Sub FEParamGetTiposCbteAsync(ByVal Auth As FEAuthRequest)
+            Me.FEParamGetTiposCbteAsync(Auth, Nothing)
+        End Sub
+        
+        '''<remarks/>
+        Public Overloads Sub FEParamGetTiposCbteAsync(ByVal Auth As FEAuthRequest, ByVal userState As Object)
+            If (Me.FEParamGetTiposCbteOperationCompleted Is Nothing) Then
+                Me.FEParamGetTiposCbteOperationCompleted = AddressOf Me.OnFEParamGetTiposCbteOperationCompleted
+            End If
+            Me.InvokeAsync("FEParamGetTiposCbte", New Object() {Auth}, Me.FEParamGetTiposCbteOperationCompleted, userState)
+        End Sub
+        
+        Private Sub OnFEParamGetTiposCbteOperationCompleted(ByVal arg As Object)
+            If (Not (Me.FEParamGetTiposCbteCompletedEvent) Is Nothing) Then
+                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
+                RaiseEvent FEParamGetTiposCbteCompleted(Me, New FEParamGetTiposCbteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
+            End If
+        End Sub
+        
+        '''<remarks/>
+        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ar.gov.afip.dif.FEV1/FEParamGetTiposDoc", RequestNamespace:="http://ar.gov.afip.dif.FEV1/", ResponseNamespace:="http://ar.gov.afip.dif.FEV1/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
+        Public Function FEParamGetTiposDoc(ByVal Auth As FEAuthRequest) As DocTipoResponse
+            Dim results() As Object = Me.Invoke("FEParamGetTiposDoc", New Object() {Auth})
+            Return CType(results(0),DocTipoResponse)
+        End Function
+        
+        '''<remarks/>
+        Public Overloads Sub FEParamGetTiposDocAsync(ByVal Auth As FEAuthRequest)
+            Me.FEParamGetTiposDocAsync(Auth, Nothing)
+        End Sub
+        
+        '''<remarks/>
+        Public Overloads Sub FEParamGetTiposDocAsync(ByVal Auth As FEAuthRequest, ByVal userState As Object)
+            If (Me.FEParamGetTiposDocOperationCompleted Is Nothing) Then
+                Me.FEParamGetTiposDocOperationCompleted = AddressOf Me.OnFEParamGetTiposDocOperationCompleted
+            End If
+            Me.InvokeAsync("FEParamGetTiposDoc", New Object() {Auth}, Me.FEParamGetTiposDocOperationCompleted, userState)
+        End Sub
+        
+        Private Sub OnFEParamGetTiposDocOperationCompleted(ByVal arg As Object)
+            If (Not (Me.FEParamGetTiposDocCompletedEvent) Is Nothing) Then
+                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
+                RaiseEvent FEParamGetTiposDocCompleted(Me, New FEParamGetTiposDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
+            End If
+        End Sub
+        
+        '''<remarks/>
+        Public Shadows Sub CancelAsync(ByVal userState As Object)
+            MyBase.CancelAsync(userState)
+        End Sub
+        
+        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
+            If ((url Is Nothing)  _
+                        OrElse (url Is String.Empty)) Then
+                Return false
+            End If
+            Dim wsUri As System.Uri = New System.Uri(url)
+            If ((wsUri.Port >= 1024)  _
+                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
+                Return true
+            End If
+            Return false
+        End Function
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FEAuthRequest
+        
+        Private tokenField As String
+        
+        Private signField As String
+        
+        Private cuitField As Long
+        
+        '''<remarks/>
+        Public Property Token() As String
+            Get
+                Return Me.tokenField
+            End Get
+            Set
+                Me.tokenField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Sign() As String
+            Get
+                Return Me.signField
+            End Get
+            Set
+                Me.signField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Cuit() As Long
+            Get
+                Return Me.cuitField
+            End Get
+            Set
+                Me.cuitField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class DocTipo
+        
+        Private idField As Integer
+        
+        Private descField As String
+        
+        Private fchDesdeField As String
+        
+        Private fchHastaField As String
+        
+        '''<remarks/>
+        Public Property Id() As Integer
+            Get
+                Return Me.idField
+            End Get
+            Set
+                Me.idField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Desc() As String
+            Get
+                Return Me.descField
+            End Get
+            Set
+                Me.descField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FchDesde() As String
+            Get
+                Return Me.fchDesdeField
+            End Get
+            Set
+                Me.fchDesdeField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FchHasta() As String
+            Get
+                Return Me.fchHastaField
+            End Get
+            Set
+                Me.fchHastaField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class DocTipoResponse
+        
+        Private resultGetField() As DocTipo
+        
+        Private errorsField() As Err
+        
+        Private eventsField() As Evt
+        
+        '''<remarks/>
+        Public Property ResultGet() As DocTipo()
+            Get
+                Return Me.resultGetField
+            End Get
+            Set
+                Me.resultGetField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Errors() As Err()
+            Get
+                Return Me.errorsField
+            End Get
+            Set
+                Me.errorsField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Events() As Evt()
+            Get
+                Return Me.eventsField
+            End Get
+            Set
+                Me.eventsField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class Err
+        
+        Private codeField As Integer
+        
+        Private msgField As String
+        
+        '''<remarks/>
+        Public Property Code() As Integer
+            Get
+                Return Me.codeField
+            End Get
+            Set
+                Me.codeField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Msg() As String
+            Get
+                Return Me.msgField
+            End Get
+            Set
+                Me.msgField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class Evt
+        
+        Private codeField As Integer
+        
+        Private msgField As String
+        
+        '''<remarks/>
+        Public Property Code() As Integer
+            Get
+                Return Me.codeField
+            End Get
+            Set
+                Me.codeField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Msg() As String
+            Get
+                Return Me.msgField
+            End Get
+            Set
+                Me.msgField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class CbteTipo
+        
+        Private idField As Integer
+        
+        Private descField As String
+        
+        Private fchDesdeField As String
+        
+        Private fchHastaField As String
+        
+        '''<remarks/>
+        Public Property Id() As Integer
+            Get
+                Return Me.idField
+            End Get
+            Set
+                Me.idField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Desc() As String
+            Get
+                Return Me.descField
+            End Get
+            Set
+                Me.descField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FchDesde() As String
+            Get
+                Return Me.fchDesdeField
+            End Get
+            Set
+                Me.fchDesdeField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FchHasta() As String
+            Get
+                Return Me.fchHastaField
+            End Get
+            Set
+                Me.fchHastaField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class CbteTipoResponse
+        
+        Private resultGetField() As CbteTipo
+        
+        Private errorsField() As Err
+        
+        Private eventsField() As Evt
+        
+        '''<remarks/>
+        Public Property ResultGet() As CbteTipo()
+            Get
+                Return Me.resultGetField
+            End Get
+            Set
+                Me.resultGetField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Errors() As Err()
+            Get
+                Return Me.errorsField
+            End Get
+            Set
+                Me.errorsField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Events() As Evt()
+            Get
+                Return Me.eventsField
+            End Get
+            Set
+                Me.eventsField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class PtoVenta
+        
+        Private nroField As Short
+        
+        Private emisionTipoField As String
+        
+        Private bloqueadoField As String
+        
+        Private fchBajaField As String
+        
+        '''<remarks/>
+        Public Property Nro() As Short
+            Get
+                Return Me.nroField
+            End Get
+            Set
+                Me.nroField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property EmisionTipo() As String
+            Get
+                Return Me.emisionTipoField
+            End Get
+            Set
+                Me.emisionTipoField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Bloqueado() As String
+            Get
+                Return Me.bloqueadoField
+            End Get
+            Set
+                Me.bloqueadoField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FchBaja() As String
+            Get
+                Return Me.fchBajaField
+            End Get
+            Set
+                Me.fchBajaField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FEPtoVentaResponse
+        
+        Private resultGetField() As PtoVenta
+        
+        Private errorsField() As Err
+        
+        Private eventsField() As Evt
+        
+        '''<remarks/>
+        Public Property ResultGet() As PtoVenta()
+            Get
+                Return Me.resultGetField
+            End Get
+            Set
+                Me.resultGetField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Errors() As Err()
+            Get
+                Return Me.errorsField
+            End Get
+            Set
+                Me.errorsField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Events() As Evt()
+            Get
+                Return Me.eventsField
+            End Get
+            Set
+                Me.eventsField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class ConceptoTipo
+        
+        Private idField As Integer
+        
+        Private descField As String
+        
+        Private fchDesdeField As String
+        
+        Private fchHastaField As String
+        
+        '''<remarks/>
+        Public Property Id() As Integer
+            Get
+                Return Me.idField
+            End Get
+            Set
+                Me.idField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Desc() As String
+            Get
+                Return Me.descField
+            End Get
+            Set
+                Me.descField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FchDesde() As String
+            Get
+                Return Me.fchDesdeField
+            End Get
+            Set
+                Me.fchDesdeField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FchHasta() As String
+            Get
+                Return Me.fchHastaField
+            End Get
+            Set
+                Me.fchHastaField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class ConceptoTipoResponse
+        
+        Private resultGetField() As ConceptoTipo
+        
+        Private errorsField() As Err
+        
+        Private eventsField() As Evt
+        
+        '''<remarks/>
+        Public Property ResultGet() As ConceptoTipo()
+            Get
+                Return Me.resultGetField
+            End Get
+            Set
+                Me.resultGetField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Errors() As Err()
+            Get
+                Return Me.errorsField
+            End Get
+            Set
+                Me.errorsField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Events() As Evt()
+            Get
+                Return Me.eventsField
+            End Get
+            Set
+                Me.eventsField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class OpcionalTipo
+        
+        Private idField As String
+        
+        Private descField As String
+        
+        Private fchDesdeField As String
+        
+        Private fchHastaField As String
+        
+        '''<remarks/>
+        Public Property Id() As String
+            Get
+                Return Me.idField
+            End Get
+            Set
+                Me.idField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Desc() As String
+            Get
+                Return Me.descField
+            End Get
+            Set
+                Me.descField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FchDesde() As String
+            Get
+                Return Me.fchDesdeField
+            End Get
+            Set
+                Me.fchDesdeField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FchHasta() As String
+            Get
+                Return Me.fchHastaField
+            End Get
+            Set
+                Me.fchHastaField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class OpcionalTipoResponse
+        
+        Private resultGetField() As OpcionalTipo
+        
+        Private errorsField() As Err
+        
+        Private eventsField() As Evt
+        
+        '''<remarks/>
+        Public Property ResultGet() As OpcionalTipo()
+            Get
+                Return Me.resultGetField
+            End Get
+            Set
+                Me.resultGetField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Errors() As Err()
+            Get
+                Return Me.errorsField
+            End Get
+            Set
+                Me.errorsField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Events() As Evt()
+            Get
+                Return Me.eventsField
+            End Get
+            Set
+                Me.eventsField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class IvaTipo
+        
+        Private idField As String
+        
+        Private descField As String
+        
+        Private fchDesdeField As String
+        
+        Private fchHastaField As String
+        
+        '''<remarks/>
+        Public Property Id() As String
+            Get
+                Return Me.idField
+            End Get
+            Set
+                Me.idField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Desc() As String
+            Get
+                Return Me.descField
+            End Get
+            Set
+                Me.descField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FchDesde() As String
+            Get
+                Return Me.fchDesdeField
+            End Get
+            Set
+                Me.fchDesdeField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FchHasta() As String
+            Get
+                Return Me.fchHastaField
+            End Get
+            Set
+                Me.fchHastaField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class IvaTipoResponse
+        
+        Private resultGetField() As IvaTipo
+        
+        Private errorsField() As Err
+        
+        Private eventsField() As Evt
+        
+        '''<remarks/>
+        Public Property ResultGet() As IvaTipo()
+            Get
+                Return Me.resultGetField
+            End Get
+            Set
+                Me.resultGetField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Errors() As Err()
+            Get
+                Return Me.errorsField
+            End Get
+            Set
+                Me.errorsField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Events() As Evt()
+            Get
+                Return Me.eventsField
+            End Get
+            Set
+                Me.eventsField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class Moneda
+        
+        Private idField As String
+        
+        Private descField As String
+        
+        Private fchDesdeField As String
+        
+        Private fchHastaField As String
+        
+        '''<remarks/>
+        Public Property Id() As String
+            Get
+                Return Me.idField
+            End Get
+            Set
+                Me.idField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Desc() As String
+            Get
+                Return Me.descField
+            End Get
+            Set
+                Me.descField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FchDesde() As String
+            Get
+                Return Me.fchDesdeField
+            End Get
+            Set
+                Me.fchDesdeField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FchHasta() As String
+            Get
+                Return Me.fchHastaField
+            End Get
+            Set
+                Me.fchHastaField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class MonedaResponse
+        
+        Private resultGetField() As Moneda
+        
+        Private errorsField() As Err
+        
+        Private eventsField() As Evt
+        
+        '''<remarks/>
+        Public Property ResultGet() As Moneda()
+            Get
+                Return Me.resultGetField
+            End Get
+            Set
+                Me.resultGetField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Errors() As Err()
+            Get
+                Return Me.errorsField
+            End Get
+            Set
+                Me.errorsField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Events() As Evt()
+            Get
+                Return Me.eventsField
+            End Get
+            Set
+                Me.eventsField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class TributoTipo
+        
+        Private idField As Short
+        
+        Private descField As String
+        
+        Private fchDesdeField As String
+        
+        Private fchHastaField As String
+        
+        '''<remarks/>
+        Public Property Id() As Short
+            Get
+                Return Me.idField
+            End Get
+            Set
+                Me.idField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Desc() As String
+            Get
+                Return Me.descField
+            End Get
+            Set
+                Me.descField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FchDesde() As String
+            Get
+                Return Me.fchDesdeField
+            End Get
+            Set
+                Me.fchDesdeField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FchHasta() As String
+            Get
+                Return Me.fchHastaField
+            End Get
+            Set
+                Me.fchHastaField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FETributoResponse
+        
+        Private resultGetField() As TributoTipo
+        
+        Private errorsField() As Err
+        
+        Private eventsField() As Evt
+        
+        '''<remarks/>
+        Public Property ResultGet() As TributoTipo()
+            Get
+                Return Me.resultGetField
+            End Get
+            Set
+                Me.resultGetField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Errors() As Err()
+            Get
+                Return Me.errorsField
+            End Get
+            Set
+                Me.errorsField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Events() As Evt()
+            Get
+                Return Me.eventsField
+            End Get
+            Set
+                Me.eventsField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class Cotizacion
+        
+        Private monIdField As String
+        
+        Private monCotizField As Double
+        
+        Private fchCotizField As String
+        
+        '''<remarks/>
+        Public Property MonId() As String
+            Get
+                Return Me.monIdField
+            End Get
+            Set
+                Me.monIdField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property MonCotiz() As Double
+            Get
+                Return Me.monCotizField
+            End Get
+            Set
+                Me.monCotizField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FchCotiz() As String
+            Get
+                Return Me.fchCotizField
+            End Get
+            Set
+                Me.fchCotizField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FECotizacionResponse
+        
+        Private resultGetField As Cotizacion
+        
+        Private errorsField() As Err
+        
+        Private eventsField() As Evt
+        
+        '''<remarks/>
+        Public Property ResultGet() As Cotizacion
+            Get
+                Return Me.resultGetField
+            End Get
+            Set
+                Me.resultGetField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Errors() As Err()
+            Get
+                Return Me.errorsField
+            End Get
+            Set
+                Me.errorsField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Events() As Evt()
+            Get
+                Return Me.eventsField
+            End Get
+            Set
+                Me.eventsField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.Xml.Serialization.XmlIncludeAttribute(GetType(FECAEASinMovResponse)),  _
+     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FECAEASinMov
+        
+        Private cAEAField As String
+        
+        Private fchProcesoField As String
+        
+        Private ptoVtaField As Integer
+        
+        '''<remarks/>
+        Public Property CAEA() As String
+            Get
+                Return Me.cAEAField
+            End Get
+            Set
+                Me.cAEAField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FchProceso() As String
+            Get
+                Return Me.fchProcesoField
+            End Get
+            Set
+                Me.fchProcesoField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property PtoVta() As Integer
+            Get
+                Return Me.ptoVtaField
+            End Get
+            Set
+                Me.ptoVtaField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FECAEASinMovResponse
+        Inherits FECAEASinMov
+        
+        Private resultadoField As String
+        
+        Private errorsField() As Err
+        
+        Private eventsField() As Evt
+        
+        '''<remarks/>
+        Public Property Resultado() As String
+            Get
+                Return Me.resultadoField
+            End Get
+            Set
+                Me.resultadoField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Errors() As Err()
+            Get
+                Return Me.errorsField
+            End Get
+            Set
+                Me.errorsField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Events() As Evt()
+            Get
+                Return Me.eventsField
+            End Get
+            Set
+                Me.eventsField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FECAEASinMovConsResponse
+        
+        Private resultGetField() As FECAEASinMov
+        
+        Private errorsField() As Err
+        
+        Private eventsField() As Evt
+        
+        '''<remarks/>
+        Public Property ResultGet() As FECAEASinMov()
+            Get
+                Return Me.resultGetField
+            End Get
+            Set
+                Me.resultGetField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Errors() As Err()
+            Get
+                Return Me.errorsField
+            End Get
+            Set
+                Me.errorsField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Events() As Evt()
+            Get
+                Return Me.eventsField
+            End Get
+            Set
+                Me.eventsField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FECAEAGet
+        
+        Private cAEAField As String
+        
+        Private periodoField As Integer
+        
+        Private ordenField As Short
+        
+        Private fchVigDesdeField As String
+        
+        Private fchVigHastaField As String
+        
+        Private fchTopeInfField As String
+        
+        Private fchProcesoField As String
+        
+        '''<remarks/>
+        Public Property CAEA() As String
+            Get
+                Return Me.cAEAField
+            End Get
+            Set
+                Me.cAEAField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Periodo() As Integer
+            Get
+                Return Me.periodoField
+            End Get
+            Set
+                Me.periodoField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Orden() As Short
+            Get
+                Return Me.ordenField
+            End Get
+            Set
+                Me.ordenField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FchVigDesde() As String
+            Get
+                Return Me.fchVigDesdeField
+            End Get
+            Set
+                Me.fchVigDesdeField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FchVigHasta() As String
+            Get
+                Return Me.fchVigHastaField
+            End Get
+            Set
+                Me.fchVigHastaField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FchTopeInf() As String
+            Get
+                Return Me.fchTopeInfField
+            End Get
+            Set
+                Me.fchTopeInfField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FchProceso() As String
+            Get
+                Return Me.fchProcesoField
+            End Get
+            Set
+                Me.fchProcesoField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FECAEAGetResponse
+        
+        Private resultGetField As FECAEAGet
+        
+        Private errorsField() As Err
+        
+        Private eventsField() As Evt
+        
+        '''<remarks/>
+        Public Property ResultGet() As FECAEAGet
+            Get
+                Return Me.resultGetField
+            End Get
+            Set
+                Me.resultGetField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Errors() As Err()
+            Get
+                Return Me.errorsField
+            End Get
+            Set
+                Me.errorsField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Events() As Evt()
+            Get
+                Return Me.eventsField
+            End Get
+            Set
+                Me.eventsField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FECAEAResponse
+        
+        Private feCabRespField As FECAEACabResponse
+        
+        Private feDetRespField() As FECAEADetResponse
+        
+        Private eventsField() As Evt
+        
+        Private errorsField() As Err
+        
+        '''<remarks/>
+        Public Property FeCabResp() As FECAEACabResponse
+            Get
+                Return Me.feCabRespField
+            End Get
+            Set
+                Me.feCabRespField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FeDetResp() As FECAEADetResponse()
+            Get
+                Return Me.feDetRespField
+            End Get
+            Set
+                Me.feDetRespField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Events() As Evt()
+            Get
+                Return Me.eventsField
+            End Get
+            Set
+                Me.eventsField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Errors() As Err()
+            Get
+                Return Me.errorsField
+            End Get
+            Set
+                Me.errorsField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FECAEACabResponse
+        Inherits FECabResponse
+    End Class
+    
+    '''<remarks/>
+    <System.Xml.Serialization.XmlIncludeAttribute(GetType(FECAEACabResponse)),  _
+     System.Xml.Serialization.XmlIncludeAttribute(GetType(FECAECabResponse)),  _
+     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FECabResponse
+        
+        Private cuitField As Long
+        
+        Private ptoVtaField As Integer
+        
+        Private cbteTipoField As Integer
+        
+        Private fchProcesoField As String
+        
+        Private cantRegField As Integer
+        
+        Private resultadoField As String
+        
+        Private reprocesoField As String
+        
+        '''<remarks/>
+        Public Property Cuit() As Long
+            Get
+                Return Me.cuitField
+            End Get
+            Set
+                Me.cuitField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property PtoVta() As Integer
+            Get
+                Return Me.ptoVtaField
+            End Get
+            Set
+                Me.ptoVtaField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property CbteTipo() As Integer
+            Get
+                Return Me.cbteTipoField
+            End Get
+            Set
+                Me.cbteTipoField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FchProceso() As String
+            Get
+                Return Me.fchProcesoField
+            End Get
+            Set
+                Me.fchProcesoField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property CantReg() As Integer
+            Get
+                Return Me.cantRegField
+            End Get
+            Set
+                Me.cantRegField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Resultado() As String
+            Get
+                Return Me.resultadoField
+            End Get
+            Set
+                Me.resultadoField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Reproceso() As String
+            Get
+                Return Me.reprocesoField
+            End Get
+            Set
+                Me.reprocesoField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FECAECabResponse
+        Inherits FECabResponse
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FECAEADetResponse
+        Inherits FEDetResponse
+        
+        Private cAEAField As String
+        
+        '''<remarks/>
+        Public Property CAEA() As String
+            Get
+                Return Me.cAEAField
+            End Get
+            Set
+                Me.cAEAField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.Xml.Serialization.XmlIncludeAttribute(GetType(FECAEADetResponse)),  _
+     System.Xml.Serialization.XmlIncludeAttribute(GetType(FECAEDetResponse)),  _
+     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FEDetResponse
+        
+        Private conceptoField As Integer
+        
+        Private docTipoField As Integer
+        
+        Private docNroField As Long
+        
+        Private cbteDesdeField As Long
+        
+        Private cbteHastaField As Long
+        
+        Private cbteFchField As String
+        
+        Private resultadoField As String
+        
+        Private observacionesField() As Obs
+        
+        '''<remarks/>
+        Public Property Concepto() As Integer
+            Get
+                Return Me.conceptoField
+            End Get
+            Set
+                Me.conceptoField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property DocTipo() As Integer
+            Get
+                Return Me.docTipoField
+            End Get
+            Set
+                Me.docTipoField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property DocNro() As Long
+            Get
+                Return Me.docNroField
+            End Get
+            Set
+                Me.docNroField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property CbteDesde() As Long
+            Get
+                Return Me.cbteDesdeField
+            End Get
+            Set
+                Me.cbteDesdeField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property CbteHasta() As Long
+            Get
+                Return Me.cbteHastaField
+            End Get
+            Set
+                Me.cbteHastaField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property CbteFch() As String
+            Get
+                Return Me.cbteFchField
+            End Get
+            Set
+                Me.cbteFchField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Resultado() As String
+            Get
+                Return Me.resultadoField
+            End Get
+            Set
+                Me.resultadoField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Observaciones() As Obs()
+            Get
+                Return Me.observacionesField
+            End Get
+            Set
+                Me.observacionesField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class Obs
+        
+        Private codeField As Integer
+        
+        Private msgField As String
+        
+        '''<remarks/>
+        Public Property Code() As Integer
+            Get
+                Return Me.codeField
+            End Get
+            Set
+                Me.codeField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Msg() As String
+            Get
+                Return Me.msgField
+            End Get
+            Set
+                Me.msgField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FECAEDetResponse
+        Inherits FEDetResponse
+        
+        Private cAEField As String
+        
+        Private cAEFchVtoField As String
+        
+        '''<remarks/>
+        Public Property CAE() As String
+            Get
+                Return Me.cAEField
+            End Get
+            Set
+                Me.cAEField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property CAEFchVto() As String
+            Get
+                Return Me.cAEFchVtoField
+            End Get
+            Set
+                Me.cAEFchVtoField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FECAEARequest
+        
+        Private feCabReqField As FECAEACabRequest
+        
+        Private feDetReqField() As FECAEADetRequest
+        
+        '''<remarks/>
+        Public Property FeCabReq() As FECAEACabRequest
+            Get
+                Return Me.feCabReqField
+            End Get
+            Set
+                Me.feCabReqField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FeDetReq() As FECAEADetRequest()
+            Get
+                Return Me.feDetReqField
+            End Get
+            Set
+                Me.feDetReqField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FECAEACabRequest
+        Inherits FECabRequest
+    End Class
+    
+    '''<remarks/>
+    <System.Xml.Serialization.XmlIncludeAttribute(GetType(FECAEACabRequest)),  _
+     System.Xml.Serialization.XmlIncludeAttribute(GetType(FECAECabRequest)),  _
+     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FECabRequest
+        
+        Private cantRegField As Integer
+        
+        Private ptoVtaField As Integer
+        
+        Private cbteTipoField As Integer
+        
+        '''<remarks/>
+        Public Property CantReg() As Integer
+            Get
+                Return Me.cantRegField
+            End Get
+            Set
+                Me.cantRegField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property PtoVta() As Integer
+            Get
+                Return Me.ptoVtaField
+            End Get
+            Set
+                Me.ptoVtaField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property CbteTipo() As Integer
+            Get
+                Return Me.cbteTipoField
+            End Get
+            Set
+                Me.cbteTipoField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FECAECabRequest
+        Inherits FECabRequest
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FECAEADetRequest
+        Inherits FEDetRequest
+        
+        Private cAEAField As String
+        
+        '''<remarks/>
+        Public Property CAEA() As String
+            Get
+                Return Me.cAEAField
+            End Get
+            Set
+                Me.cAEAField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.Xml.Serialization.XmlIncludeAttribute(GetType(FECAEADetRequest)),  _
+     System.Xml.Serialization.XmlIncludeAttribute(GetType(FECAEDetRequest)),  _
+     System.Xml.Serialization.XmlIncludeAttribute(GetType(FECompConsResponse)),  _
+     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FEDetRequest
+        
+        Private conceptoField As Integer
+        
+        Private docTipoField As Integer
+        
+        Private docNroField As Long
+        
+        Private cbteDesdeField As Long
+        
+        Private cbteHastaField As Long
+        
+        Private cbteFchField As String
+        
+        Private impTotalField As Double
+        
+        Private impTotConcField As Double
+        
+        Private impNetoField As Double
+        
+        Private impOpExField As Double
+        
+        Private impTribField As Double
+        
+        Private impIVAField As Double
+        
+        Private fchServDesdeField As String
+        
+        Private fchServHastaField As String
+        
+        Private fchVtoPagoField As String
+        
+        Private monIdField As String
+        
+        Private monCotizField As Double
+        
+        Private cbtesAsocField() As CbteAsoc
+        
+        Private tributosField() As Tributo
+        
+        Private ivaField() As AlicIva
+        
+        Private opcionalesField() As Opcional
+        
+        '''<remarks/>
+        Public Property Concepto() As Integer
+            Get
+                Return Me.conceptoField
+            End Get
+            Set
+                Me.conceptoField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property DocTipo() As Integer
+            Get
+                Return Me.docTipoField
+            End Get
+            Set
+                Me.docTipoField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property DocNro() As Long
+            Get
+                Return Me.docNroField
+            End Get
+            Set
+                Me.docNroField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property CbteDesde() As Long
+            Get
+                Return Me.cbteDesdeField
+            End Get
+            Set
+                Me.cbteDesdeField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property CbteHasta() As Long
+            Get
+                Return Me.cbteHastaField
+            End Get
+            Set
+                Me.cbteHastaField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property CbteFch() As String
+            Get
+                Return Me.cbteFchField
+            End Get
+            Set
+                Me.cbteFchField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property ImpTotal() As Double
+            Get
+                Return Me.impTotalField
+            End Get
+            Set
+                Me.impTotalField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property ImpTotConc() As Double
+            Get
+                Return Me.impTotConcField
+            End Get
+            Set
+                Me.impTotConcField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property ImpNeto() As Double
+            Get
+                Return Me.impNetoField
+            End Get
+            Set
+                Me.impNetoField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property ImpOpEx() As Double
+            Get
+                Return Me.impOpExField
+            End Get
+            Set
+                Me.impOpExField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property ImpTrib() As Double
+            Get
+                Return Me.impTribField
+            End Get
+            Set
+                Me.impTribField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property ImpIVA() As Double
+            Get
+                Return Me.impIVAField
+            End Get
+            Set
+                Me.impIVAField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FchServDesde() As String
+            Get
+                Return Me.fchServDesdeField
+            End Get
+            Set
+                Me.fchServDesdeField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FchServHasta() As String
+            Get
+                Return Me.fchServHastaField
+            End Get
+            Set
+                Me.fchServHastaField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FchVtoPago() As String
+            Get
+                Return Me.fchVtoPagoField
+            End Get
+            Set
+                Me.fchVtoPagoField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property MonId() As String
+            Get
+                Return Me.monIdField
+            End Get
+            Set
+                Me.monIdField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property MonCotiz() As Double
+            Get
+                Return Me.monCotizField
+            End Get
+            Set
+                Me.monCotizField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property CbtesAsoc() As CbteAsoc()
+            Get
+                Return Me.cbtesAsocField
+            End Get
+            Set
+                Me.cbtesAsocField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Tributos() As Tributo()
+            Get
+                Return Me.tributosField
+            End Get
+            Set
+                Me.tributosField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Iva() As AlicIva()
+            Get
+                Return Me.ivaField
+            End Get
+            Set
+                Me.ivaField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Opcionales() As Opcional()
+            Get
+                Return Me.opcionalesField
+            End Get
+            Set
+                Me.opcionalesField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class CbteAsoc
+        
+        Private tipoField As Integer
+        
+        Private ptoVtaField As Integer
+        
+        Private nroField As Long
+        
+        '''<remarks/>
+        Public Property Tipo() As Integer
+            Get
+                Return Me.tipoField
+            End Get
+            Set
+                Me.tipoField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property PtoVta() As Integer
+            Get
+                Return Me.ptoVtaField
+            End Get
+            Set
+                Me.ptoVtaField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Nro() As Long
+            Get
+                Return Me.nroField
+            End Get
+            Set
+                Me.nroField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class Tributo
+        
+        Private idField As Short
+        
+        Private descField As String
+        
+        Private baseImpField As Double
+        
+        Private alicField As Double
+        
+        Private importeField As Double
+        
+        '''<remarks/>
+        Public Property Id() As Short
+            Get
+                Return Me.idField
+            End Get
+            Set
+                Me.idField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Desc() As String
+            Get
+                Return Me.descField
+            End Get
+            Set
+                Me.descField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property BaseImp() As Double
+            Get
+                Return Me.baseImpField
+            End Get
+            Set
+                Me.baseImpField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Alic() As Double
+            Get
+                Return Me.alicField
+            End Get
+            Set
+                Me.alicField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Importe() As Double
+            Get
+                Return Me.importeField
+            End Get
+            Set
+                Me.importeField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class AlicIva
+        
+        Private idField As Integer
+        
+        Private baseImpField As Double
+        
+        Private importeField As Double
+        
+        '''<remarks/>
+        Public Property Id() As Integer
+            Get
+                Return Me.idField
+            End Get
+            Set
+                Me.idField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property BaseImp() As Double
+            Get
+                Return Me.baseImpField
+            End Get
+            Set
+                Me.baseImpField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Importe() As Double
+            Get
+                Return Me.importeField
+            End Get
+            Set
+                Me.importeField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class Opcional
+        
+        Private idField As String
+        
+        Private valorField As String
+        
+        '''<remarks/>
+        Public Property Id() As String
+            Get
+                Return Me.idField
+            End Get
+            Set
+                Me.idField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Valor() As String
+            Get
+                Return Me.valorField
+            End Get
+            Set
+                Me.valorField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.Xml.Serialization.XmlIncludeAttribute(GetType(FECompConsResponse)),  _
+     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FECAEDetRequest
+        Inherits FEDetRequest
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FECompConsResponse
+        Inherits FECAEDetRequest
+        
+        Private resultadoField As String
+        
+        Private codAutorizacionField As String
+        
+        Private emisionTipoField As String
+        
+        Private fchVtoField As String
+        
+        Private fchProcesoField As String
+        
+        Private observacionesField() As Obs
+        
+        Private ptoVtaField As Integer
+        
+        Private cbteTipoField As Integer
+        
+        '''<remarks/>
+        Public Property Resultado() As String
+            Get
+                Return Me.resultadoField
+            End Get
+            Set
+                Me.resultadoField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property CodAutorizacion() As String
+            Get
+                Return Me.codAutorizacionField
+            End Get
+            Set
+                Me.codAutorizacionField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property EmisionTipo() As String
+            Get
+                Return Me.emisionTipoField
+            End Get
+            Set
+                Me.emisionTipoField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FchVto() As String
+            Get
+                Return Me.fchVtoField
+            End Get
+            Set
+                Me.fchVtoField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FchProceso() As String
+            Get
+                Return Me.fchProcesoField
+            End Get
+            Set
+                Me.fchProcesoField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Observaciones() As Obs()
+            Get
+                Return Me.observacionesField
+            End Get
+            Set
+                Me.observacionesField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property PtoVta() As Integer
+            Get
+                Return Me.ptoVtaField
+            End Get
+            Set
+                Me.ptoVtaField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property CbteTipo() As Integer
+            Get
+                Return Me.cbteTipoField
+            End Get
+            Set
+                Me.cbteTipoField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FECompConsultaResponse
+        
+        Private resultGetField As FECompConsResponse
+        
+        Private errorsField() As Err
+        
+        Private eventsField() As Evt
+        
+        '''<remarks/>
+        Public Property ResultGet() As FECompConsResponse
+            Get
+                Return Me.resultGetField
+            End Get
+            Set
+                Me.resultGetField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Errors() As Err()
+            Get
+                Return Me.errorsField
+            End Get
+            Set
+                Me.errorsField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Events() As Evt()
+            Get
+                Return Me.eventsField
+            End Get
+            Set
+                Me.eventsField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FECompConsultaReq
+        
+        Private cbteTipoField As Integer
+        
+        Private cbteNroField As Long
+        
+        Private ptoVtaField As Integer
+        
+        '''<remarks/>
+        Public Property CbteTipo() As Integer
+            Get
+                Return Me.cbteTipoField
+            End Get
+            Set
+                Me.cbteTipoField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property CbteNro() As Long
+            Get
+                Return Me.cbteNroField
+            End Get
+            Set
+                Me.cbteNroField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property PtoVta() As Integer
+            Get
+                Return Me.ptoVtaField
+            End Get
+            Set
+                Me.ptoVtaField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FERecuperaLastCbteResponse
+        
+        Private ptoVtaField As Integer
+        
+        Private cbteTipoField As Integer
+        
+        Private cbteNroField As Integer
+        
+        Private errorsField() As Err
+        
+        Private eventsField() As Evt
+        
+        '''<remarks/>
+        Public Property PtoVta() As Integer
+            Get
+                Return Me.ptoVtaField
+            End Get
+            Set
+                Me.ptoVtaField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property CbteTipo() As Integer
+            Get
+                Return Me.cbteTipoField
+            End Get
+            Set
+                Me.cbteTipoField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property CbteNro() As Integer
+            Get
+                Return Me.cbteNroField
+            End Get
+            Set
+                Me.cbteNroField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Errors() As Err()
+            Get
+                Return Me.errorsField
+            End Get
+            Set
+                Me.errorsField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Events() As Evt()
+            Get
+                Return Me.eventsField
+            End Get
+            Set
+                Me.eventsField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class DummyResponse
+        
+        Private appServerField As String
+        
+        Private dbServerField As String
+        
+        Private authServerField As String
+        
+        '''<remarks/>
+        Public Property AppServer() As String
+            Get
+                Return Me.appServerField
+            End Get
+            Set
+                Me.appServerField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property DbServer() As String
+            Get
+                Return Me.dbServerField
+            End Get
+            Set
+                Me.dbServerField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property AuthServer() As String
+            Get
+                Return Me.authServerField
+            End Get
+            Set
+                Me.authServerField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FERegXReqResponse
+        
+        Private regXReqField As Integer
+        
+        Private errorsField() As Err
+        
+        Private eventsField() As Evt
+        
+        '''<remarks/>
+        Public Property RegXReq() As Integer
+            Get
+                Return Me.regXReqField
+            End Get
+            Set
+                Me.regXReqField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Errors() As Err()
+            Get
+                Return Me.errorsField
+            End Get
+            Set
+                Me.errorsField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Events() As Evt()
+            Get
+                Return Me.eventsField
+            End Get
+            Set
+                Me.eventsField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FECAEResponse
+        
+        Private feCabRespField As FECAECabResponse
+        
+        Private feDetRespField() As FECAEDetResponse
+        
+        Private eventsField() As Evt
+        
+        Private errorsField() As Err
+        
+        '''<remarks/>
+        Public Property FeCabResp() As FECAECabResponse
+            Get
+                Return Me.feCabRespField
+            End Get
+            Set
+                Me.feCabRespField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FeDetResp() As FECAEDetResponse()
+            Get
+                Return Me.feDetRespField
+            End Get
+            Set
+                Me.feDetRespField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Events() As Evt()
+            Get
+                Return Me.eventsField
+            End Get
+            Set
+                Me.eventsField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property Errors() As Err()
+            Get
+                Return Me.errorsField
+            End Get
+            Set
+                Me.errorsField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
+     System.SerializableAttribute(),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code"),  _
+     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ar.gov.afip.dif.FEV1/")>  _
+    Partial Public Class FECAERequest
+        
+        Private feCabReqField As FECAECabRequest
+        
+        Private feDetReqField() As FECAEDetRequest
+        
+        '''<remarks/>
+        Public Property FeCabReq() As FECAECabRequest
+            Get
+                Return Me.feCabReqField
+            End Get
+            Set
+                Me.feCabReqField = value
+            End Set
+        End Property
+        
+        '''<remarks/>
+        Public Property FeDetReq() As FECAEDetRequest()
+            Get
+                Return Me.feDetReqField
+            End Get
+            Set
+                Me.feDetReqField = value
+            End Set
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
+    Public Delegate Sub FECAESolicitarCompletedEventHandler(ByVal sender As Object, ByVal e As FECAESolicitarCompletedEventArgs)
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code")>  _
+    Partial Public Class FECAESolicitarCompletedEventArgs
+        Inherits System.ComponentModel.AsyncCompletedEventArgs
+        
+        Private results() As Object
+        
+        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
+            MyBase.New(exception, cancelled, userState)
+            Me.results = results
+        End Sub
+        
+        '''<remarks/>
+        Public ReadOnly Property Result() As FECAEResponse
+            Get
+                Me.RaiseExceptionIfNecessary
+                Return CType(Me.results(0),FECAEResponse)
+            End Get
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
+    Public Delegate Sub FECompTotXRequestCompletedEventHandler(ByVal sender As Object, ByVal e As FECompTotXRequestCompletedEventArgs)
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code")>  _
+    Partial Public Class FECompTotXRequestCompletedEventArgs
+        Inherits System.ComponentModel.AsyncCompletedEventArgs
+        
+        Private results() As Object
+        
+        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
+            MyBase.New(exception, cancelled, userState)
+            Me.results = results
+        End Sub
+        
+        '''<remarks/>
+        Public ReadOnly Property Result() As FERegXReqResponse
+            Get
+                Me.RaiseExceptionIfNecessary
+                Return CType(Me.results(0),FERegXReqResponse)
+            End Get
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
+    Public Delegate Sub FEDummyCompletedEventHandler(ByVal sender As Object, ByVal e As FEDummyCompletedEventArgs)
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code")>  _
+    Partial Public Class FEDummyCompletedEventArgs
+        Inherits System.ComponentModel.AsyncCompletedEventArgs
+        
+        Private results() As Object
+        
+        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
+            MyBase.New(exception, cancelled, userState)
+            Me.results = results
+        End Sub
+        
+        '''<remarks/>
+        Public ReadOnly Property Result() As DummyResponse
+            Get
+                Me.RaiseExceptionIfNecessary
+                Return CType(Me.results(0),DummyResponse)
+            End Get
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
+    Public Delegate Sub FECompUltimoAutorizadoCompletedEventHandler(ByVal sender As Object, ByVal e As FECompUltimoAutorizadoCompletedEventArgs)
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code")>  _
+    Partial Public Class FECompUltimoAutorizadoCompletedEventArgs
+        Inherits System.ComponentModel.AsyncCompletedEventArgs
+        
+        Private results() As Object
+        
+        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
+            MyBase.New(exception, cancelled, userState)
+            Me.results = results
+        End Sub
+        
+        '''<remarks/>
+        Public ReadOnly Property Result() As FERecuperaLastCbteResponse
+            Get
+                Me.RaiseExceptionIfNecessary
+                Return CType(Me.results(0),FERecuperaLastCbteResponse)
+            End Get
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
+    Public Delegate Sub FECompConsultarCompletedEventHandler(ByVal sender As Object, ByVal e As FECompConsultarCompletedEventArgs)
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code")>  _
+    Partial Public Class FECompConsultarCompletedEventArgs
+        Inherits System.ComponentModel.AsyncCompletedEventArgs
+        
+        Private results() As Object
+        
+        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
+            MyBase.New(exception, cancelled, userState)
+            Me.results = results
+        End Sub
+        
+        '''<remarks/>
+        Public ReadOnly Property Result() As FECompConsultaResponse
+            Get
+                Me.RaiseExceptionIfNecessary
+                Return CType(Me.results(0),FECompConsultaResponse)
+            End Get
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
+    Public Delegate Sub FECAEARegInformativoCompletedEventHandler(ByVal sender As Object, ByVal e As FECAEARegInformativoCompletedEventArgs)
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code")>  _
+    Partial Public Class FECAEARegInformativoCompletedEventArgs
+        Inherits System.ComponentModel.AsyncCompletedEventArgs
+        
+        Private results() As Object
+        
+        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
+            MyBase.New(exception, cancelled, userState)
+            Me.results = results
+        End Sub
+        
+        '''<remarks/>
+        Public ReadOnly Property Result() As FECAEAResponse
+            Get
+                Me.RaiseExceptionIfNecessary
+                Return CType(Me.results(0),FECAEAResponse)
+            End Get
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
+    Public Delegate Sub FECAEASolicitarCompletedEventHandler(ByVal sender As Object, ByVal e As FECAEASolicitarCompletedEventArgs)
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code")>  _
+    Partial Public Class FECAEASolicitarCompletedEventArgs
+        Inherits System.ComponentModel.AsyncCompletedEventArgs
+        
+        Private results() As Object
+        
+        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
+            MyBase.New(exception, cancelled, userState)
+            Me.results = results
+        End Sub
+        
+        '''<remarks/>
+        Public ReadOnly Property Result() As FECAEAGetResponse
+            Get
+                Me.RaiseExceptionIfNecessary
+                Return CType(Me.results(0),FECAEAGetResponse)
+            End Get
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
+    Public Delegate Sub FECAEASinMovimientoConsultarCompletedEventHandler(ByVal sender As Object, ByVal e As FECAEASinMovimientoConsultarCompletedEventArgs)
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code")>  _
+    Partial Public Class FECAEASinMovimientoConsultarCompletedEventArgs
+        Inherits System.ComponentModel.AsyncCompletedEventArgs
+        
+        Private results() As Object
+        
+        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
+            MyBase.New(exception, cancelled, userState)
+            Me.results = results
+        End Sub
+        
+        '''<remarks/>
+        Public ReadOnly Property Result() As FECAEASinMovConsResponse
+            Get
+                Me.RaiseExceptionIfNecessary
+                Return CType(Me.results(0),FECAEASinMovConsResponse)
+            End Get
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
+    Public Delegate Sub FECAEASinMovimientoInformarCompletedEventHandler(ByVal sender As Object, ByVal e As FECAEASinMovimientoInformarCompletedEventArgs)
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code")>  _
+    Partial Public Class FECAEASinMovimientoInformarCompletedEventArgs
+        Inherits System.ComponentModel.AsyncCompletedEventArgs
+        
+        Private results() As Object
+        
+        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
+            MyBase.New(exception, cancelled, userState)
+            Me.results = results
+        End Sub
+        
+        '''<remarks/>
+        Public ReadOnly Property Result() As FECAEASinMovResponse
+            Get
+                Me.RaiseExceptionIfNecessary
+                Return CType(Me.results(0),FECAEASinMovResponse)
+            End Get
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
+    Public Delegate Sub FECAEAConsultarCompletedEventHandler(ByVal sender As Object, ByVal e As FECAEAConsultarCompletedEventArgs)
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code")>  _
+    Partial Public Class FECAEAConsultarCompletedEventArgs
+        Inherits System.ComponentModel.AsyncCompletedEventArgs
+        
+        Private results() As Object
+        
+        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
+            MyBase.New(exception, cancelled, userState)
+            Me.results = results
+        End Sub
+        
+        '''<remarks/>
+        Public ReadOnly Property Result() As FECAEAGetResponse
+            Get
+                Me.RaiseExceptionIfNecessary
+                Return CType(Me.results(0),FECAEAGetResponse)
+            End Get
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
+    Public Delegate Sub FEParamGetCotizacionCompletedEventHandler(ByVal sender As Object, ByVal e As FEParamGetCotizacionCompletedEventArgs)
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code")>  _
+    Partial Public Class FEParamGetCotizacionCompletedEventArgs
+        Inherits System.ComponentModel.AsyncCompletedEventArgs
+        
+        Private results() As Object
+        
+        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
+            MyBase.New(exception, cancelled, userState)
+            Me.results = results
+        End Sub
+        
+        '''<remarks/>
+        Public ReadOnly Property Result() As FECotizacionResponse
+            Get
+                Me.RaiseExceptionIfNecessary
+                Return CType(Me.results(0),FECotizacionResponse)
+            End Get
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
+    Public Delegate Sub FEParamGetTiposTributosCompletedEventHandler(ByVal sender As Object, ByVal e As FEParamGetTiposTributosCompletedEventArgs)
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code")>  _
+    Partial Public Class FEParamGetTiposTributosCompletedEventArgs
+        Inherits System.ComponentModel.AsyncCompletedEventArgs
+        
+        Private results() As Object
+        
+        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
+            MyBase.New(exception, cancelled, userState)
+            Me.results = results
+        End Sub
+        
+        '''<remarks/>
+        Public ReadOnly Property Result() As FETributoResponse
+            Get
+                Me.RaiseExceptionIfNecessary
+                Return CType(Me.results(0),FETributoResponse)
+            End Get
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
+    Public Delegate Sub FEParamGetTiposMonedasCompletedEventHandler(ByVal sender As Object, ByVal e As FEParamGetTiposMonedasCompletedEventArgs)
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code")>  _
+    Partial Public Class FEParamGetTiposMonedasCompletedEventArgs
+        Inherits System.ComponentModel.AsyncCompletedEventArgs
+        
+        Private results() As Object
+        
+        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
+            MyBase.New(exception, cancelled, userState)
+            Me.results = results
+        End Sub
+        
+        '''<remarks/>
+        Public ReadOnly Property Result() As MonedaResponse
+            Get
+                Me.RaiseExceptionIfNecessary
+                Return CType(Me.results(0),MonedaResponse)
+            End Get
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
+    Public Delegate Sub FEParamGetTiposIvaCompletedEventHandler(ByVal sender As Object, ByVal e As FEParamGetTiposIvaCompletedEventArgs)
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code")>  _
+    Partial Public Class FEParamGetTiposIvaCompletedEventArgs
+        Inherits System.ComponentModel.AsyncCompletedEventArgs
+        
+        Private results() As Object
+        
+        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
+            MyBase.New(exception, cancelled, userState)
+            Me.results = results
+        End Sub
+        
+        '''<remarks/>
+        Public ReadOnly Property Result() As IvaTipoResponse
+            Get
+                Me.RaiseExceptionIfNecessary
+                Return CType(Me.results(0),IvaTipoResponse)
+            End Get
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
+    Public Delegate Sub FEParamGetTiposOpcionalCompletedEventHandler(ByVal sender As Object, ByVal e As FEParamGetTiposOpcionalCompletedEventArgs)
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code")>  _
+    Partial Public Class FEParamGetTiposOpcionalCompletedEventArgs
+        Inherits System.ComponentModel.AsyncCompletedEventArgs
+        
+        Private results() As Object
+        
+        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
+            MyBase.New(exception, cancelled, userState)
+            Me.results = results
+        End Sub
+        
+        '''<remarks/>
+        Public ReadOnly Property Result() As OpcionalTipoResponse
+            Get
+                Me.RaiseExceptionIfNecessary
+                Return CType(Me.results(0),OpcionalTipoResponse)
+            End Get
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
+    Public Delegate Sub FEParamGetTiposConceptoCompletedEventHandler(ByVal sender As Object, ByVal e As FEParamGetTiposConceptoCompletedEventArgs)
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code")>  _
+    Partial Public Class FEParamGetTiposConceptoCompletedEventArgs
+        Inherits System.ComponentModel.AsyncCompletedEventArgs
+        
+        Private results() As Object
+        
+        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
+            MyBase.New(exception, cancelled, userState)
+            Me.results = results
+        End Sub
+        
+        '''<remarks/>
+        Public ReadOnly Property Result() As ConceptoTipoResponse
+            Get
+                Me.RaiseExceptionIfNecessary
+                Return CType(Me.results(0),ConceptoTipoResponse)
+            End Get
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
+    Public Delegate Sub FEParamGetPtosVentaCompletedEventHandler(ByVal sender As Object, ByVal e As FEParamGetPtosVentaCompletedEventArgs)
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code")>  _
+    Partial Public Class FEParamGetPtosVentaCompletedEventArgs
+        Inherits System.ComponentModel.AsyncCompletedEventArgs
+        
+        Private results() As Object
+        
+        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
+            MyBase.New(exception, cancelled, userState)
+            Me.results = results
+        End Sub
+        
+        '''<remarks/>
+        Public ReadOnly Property Result() As FEPtoVentaResponse
+            Get
+                Me.RaiseExceptionIfNecessary
+                Return CType(Me.results(0),FEPtoVentaResponse)
+            End Get
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
+    Public Delegate Sub FEParamGetTiposCbteCompletedEventHandler(ByVal sender As Object, ByVal e As FEParamGetTiposCbteCompletedEventArgs)
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code")>  _
+    Partial Public Class FEParamGetTiposCbteCompletedEventArgs
+        Inherits System.ComponentModel.AsyncCompletedEventArgs
+        
+        Private results() As Object
+        
+        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
+            MyBase.New(exception, cancelled, userState)
+            Me.results = results
+        End Sub
+        
+        '''<remarks/>
+        Public ReadOnly Property Result() As CbteTipoResponse
+            Get
+                Me.RaiseExceptionIfNecessary
+                Return CType(Me.results(0),CbteTipoResponse)
+            End Get
+        End Property
+    End Class
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
+    Public Delegate Sub FEParamGetTiposDocCompletedEventHandler(ByVal sender As Object, ByVal e As FEParamGetTiposDocCompletedEventArgs)
+    
+    '''<remarks/>
+    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
+     System.Diagnostics.DebuggerStepThroughAttribute(),  _
+     System.ComponentModel.DesignerCategoryAttribute("code")>  _
+    Partial Public Class FEParamGetTiposDocCompletedEventArgs
+        Inherits System.ComponentModel.AsyncCompletedEventArgs
+        
+        Private results() As Object
+        
+        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
+            MyBase.New(exception, cancelled, userState)
+            Me.results = results
+        End Sub
+        
+        '''<remarks/>
+        Public ReadOnly Property Result() As DocTipoResponse
+            Get
+                Me.RaiseExceptionIfNecessary
+                Return CType(Me.results(0),DocTipoResponse)
+            End Get
+        End Property
+    End Class
+End Namespace
diff --git a/DROil.vbproj b/DROil.vbproj
index 48c7343bbb110d1ed0bab72c595d86b30216cae2..5d4e45db87dd8cac48a753dbc4b27571a2d0e4f4 100644
--- a/DROil.vbproj
+++ b/DROil.vbproj
@@ -96,54 +96,50 @@
     <Reference Include="Microsoft.ReportViewer.Design, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
       <HintPath>packages\Microsoft.ReportingServices.ReportViewerControl.Winforms.150.1484.0\lib\net40\Microsoft.ReportViewer.Design.dll</HintPath>
     </Reference>
     <Reference Include="Microsoft.ReportViewer.ProcessingObjectModel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
       <HintPath>packages\Microsoft.ReportingServices.ReportViewerControl.Winforms.150.1484.0\lib\net40\Microsoft.ReportViewer.ProcessingObjectModel.dll</HintPath>
     </Reference>
     <Reference Include="Microsoft.ReportViewer.WinForms, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
       <HintPath>packages\Microsoft.ReportingServices.ReportViewerControl.Winforms.150.1484.0\lib\net40\Microsoft.ReportViewer.WinForms.dll</HintPath>
     </Reference>
     <Reference Include="Microsoft.SqlServer.Types, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
       <HintPath>packages\Microsoft.SqlServer.Types.14.0.1016.290\lib\net40\Microsoft.SqlServer.Types.dll</HintPath>
     </Reference>
     <Reference Include="Newtonsoft.Json, Version=13.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
       <HintPath>packages\Newtonsoft.Json.13.0.1\lib\net45\Newtonsoft.Json.dll</HintPath>
     </Reference>
     <Reference Include="System" />
     <Reference Include="System.Data" />
     <Reference Include="System.Deployment" />
     <Reference Include="System.Drawing" />
     <Reference Include="System.Web.Services" />
     <Reference Include="System.Windows.Forms" />
     <Reference Include="System.Xml" />
     <Reference Include="System.Core" />
     <Reference Include="System.Xml.Linq" />
     <Reference Include="System.Data.DataSetExtensions" />
-    <Reference Include="WSAFIPFE, Version=92.4.0.0, Culture=neutral, PublicKeyToken=e3525bb207303650, processorArchitecture=MSIL">
-      <SpecificVersion>False</SpecificVersion>
-      <HintPath>C:\Program Files (x86)\SC\WSAFIPFE\WSAFIPFE.dll</HintPath>
-    </Reference>
   </ItemGroup>
   <ItemGroup>
     <Import Include="Microsoft.VisualBasic" />
     <Import Include="System" />
     <Import Include="System.Collections" />
     <Import Include="System.Collections.Generic" />
     <Import Include="System.Data" />
     <Import Include="System.Drawing" />
     <Import Include="System.Diagnostics" />
     <Import Include="System.Windows.Forms" />
     <Import Include="System.Linq" />
     <Import Include="System.Xml.Linq" />
     <Import Include="System.Threading.Tasks" />
   </ItemGroup>
   <ItemGroup>
     <Compile Include="clases\clsauto.vb" />
     <Compile Include="clases\clscaja.vb" />
     <Compile Include="clases\clscambio.vb" />
     <Compile Include="clases\clscliente.vb" />
     <Compile Include="clases\clscomprobante.vb" />
     <Compile Include="clases\clscondicion.vb" />
     <Compile Include="clases\clsconfig.vb" />
     <Compile Include="clases\clsconfiguracion.vb" />
     <Compile Include="clases\clsconsultas_personalizadas.vb" />
     <Compile Include="clases\clsconsultas_SIAP.vb" />
@@ -522,50 +518,53 @@
     <Compile Include="funciones\tipositems.vb" />
     <Compile Include="funciones\usuarios.vb" />
     <Compile Include="funciones\vendedores.vb" />
     <Compile Include="My Project\AssemblyInfo.vb" />
     <Compile Include="My Project\Application.Designer.vb">
       <AutoGen>True</AutoGen>
       <DependentUpon>Application.myapp</DependentUpon>
     </Compile>
     <Compile Include="My Project\Resources.Designer.vb">
       <AutoGen>True</AutoGen>
       <DesignTime>True</DesignTime>
       <DependentUpon>Resources.resx</DependentUpon>
     </Compile>
     <Compile Include="My Project\Settings.Designer.vb">
       <AutoGen>True</AutoGen>
       <DependentUpon>Settings.settings</DependentUpon>
       <DesignTimeSharedInput>True</DesignTimeSharedInput>
     </Compile>
     <Compile Include="Módulos\archivos.vb" />
     <Compile Include="Módulos\autoajuste.vb" />
     <Compile Include="Módulos\configuracion_regional.vb" />
     <Compile Include="Módulos\factura_electronica.vb" />
     <Compile Include="Módulos\general.vb" />
     <Compile Include="Módulos\LeeCotizacionDolar.vb" />
     <Compile Include="Módulos\mconfig.vb" />
+    <Compile Include="Módulos\afip_native.vb" />
+    <Compile Include="AfipNative\LoginTicket.vb" />
+    <Compile Include="AfipNative\WsfeReference.vb" />
   </ItemGroup>
   <ItemGroup>
     <EmbeddedResource Include="Formularios\advancesearch.resx">
       <DependentUpon>advancesearch.vb</DependentUpon>
     </EmbeddedResource>
     <EmbeddedResource Include="Formularios\Agregar\add_auto.resx">
       <DependentUpon>add_auto.vb</DependentUpon>
     </EmbeddedResource>
     <EmbeddedResource Include="Formularios\Agregar\add_caja.resx">
       <DependentUpon>add_caja.vb</DependentUpon>
     </EmbeddedResource>
     <EmbeddedResource Include="Formularios\Agregar\add_caso.resx">
       <DependentUpon>add_caso.vb</DependentUpon>
     </EmbeddedResource>
     <EmbeddedResource Include="Formularios\Agregar\add_cliente.resx">
       <DependentUpon>add_cliente.vb</DependentUpon>
     </EmbeddedResource>
     <EmbeddedResource Include="Formularios\Agregar\add_comprobante.resx">
       <DependentUpon>add_comprobante.vb</DependentUpon>
     </EmbeddedResource>
     <EmbeddedResource Include="Formularios\Agregar\add_condicion.resx">
       <DependentUpon>add_condicion.vb</DependentUpon>
     </EmbeddedResource>
     <EmbeddedResource Include="Formularios\Agregar\add_consulta.resx">
       <DependentUpon>add_consulta.vb</DependentUpon>
diff --git "a/M\303\263dulos/afip_native.vb" "b/M\303\263dulos/afip_native.vb"
new file mode 100644
index 0000000000000000000000000000000000000000..3ef9115bab49b8fc96861d94952cd2e1edaf3202
--- /dev/null
+++ "b/M\303\263dulos/afip_native.vb"
@@ -0,0 +1,24 @@
+'Módulos/afip_native.vb
+Imports System.Security
+Module afip_native
+    Public Function ObtenerTicket(service As String, url As String, cert As String, password As String) As LoginTicket
+        Dim ss As New SecureString()
+        For Each ch As Char In password
+            ss.AppendChar(ch)
+        Next
+        ss.MakeReadOnly()
+        Dim lt As New LoginTicket()
+        lt.ObtenerLoginTicketResponse(service, url, cert, ss, Nothing, Nothing, Nothing, False)
+        Return lt
+    End Function
+
+    Public Function SolicitarCAE(lt As LoginTicket, req As wsfev1.FECAERequest, cuit As Long, url As String) As wsfev1.FECAEResponse
+        Dim svc As New wsfev1.Service()
+        svc.Url = url
+        Dim auth As New wsfev1.FEAuthRequest()
+        auth.Token = lt.Token
+        auth.Sign = lt.Sign
+        auth.Cuit = cuit
+        Return svc.FECAESolicitar(auth, req)
+    End Function
+End Module
diff --git "a/M\303\263dulos/factura_electronica.vb" "b/M\303\263dulos/factura_electronica.vb"
index 5e2cd592f0743ab5421b866057a2b3bb99cdf6a9..e62e59c4e6f6d96963cb5df06f584e965520b25d 100644
--- "a/M\303\263dulos/factura_electronica.vb"
+++ "b/M\303\263dulos/factura_electronica.vb"
@@ -1,187 +1,137 @@
 ﻿Imports System.IO
 
 Module factura
     Private pc As String
     Private modo As String
     Private archivo_certificado As String
     Private archivo_licencia As String
     Private password_certificado As String
     Private cuit_emisor As String
 
     Public Function facturar(ByVal p As pedido, ByVal ff As FE, ByVal c As comprobante) As Integer
         'SI DEVUELVE 1 ESTÁ TODO OK
         'SI DEVUELVE 0 HUBO UN ERROR
 
         '************** FACTURA ELECTRONICA ************** 
 
         'Obtengo los datos del comprobante
         Dim lResultado As Boolean = False
         Dim f As New FE
         Dim cl As New cliente
-        Dim fe As New WSAFIPFE.Factura
 
         f.subtotal = ff.subtotal
         f.impuestos = ff.impuestos
         f.total = ff.total
 
         If c.esPresupuesto Or c.esManual Then
             c.numeroComprobante = c.numeroComprobante + 1
             updatecomprobante(c)
             p.cerrado = True
             p.activo = False
             'p.puntoVenta = c.puntoVenta  '22092020
             'p.numeroComprobante = c.numeroComprobante
 
             With f
                 .id_pedido = p.id_pedido
                 .id_comprobante = c.id_comprobante
                 .puntoVenta = c.puntoVenta
                 .numeroComprobante = c.numeroComprobante
                 .fecha_emision = Format(DateTime.Now, "dd/MM/yyyy")
                 '.fecha_emision = Format(DateTime.Now, "MM/dd/yyyy")
             End With
 
             emiteFE(f)
             'updatepedido(p)
             Return 1
         End If
 
         'Obtengo los datos del cliente
         cl = info_cliente(p.id_cliente)
 
         If Not inicialesFE(c.testing) Then
             MsgBox("Hubo un problema al inicializar el webservice, puede ser un problema de certificados", vbCritical + vbOKOnly, "Centrex")
             Return 0
             Exit Function
         End If
 
-        If fe.iniciar(modo, cuit_emisor, archivo_certificado, archivo_licencia) Then
-            If Not Resultado_Ticket_acceso(fe) Then
-                MsgBox(errorFE(fe, c) & vbCr & vbCr & "Error al obtener el ticket de acceso, PROBLEMA DE AFIP")
-                Return 0
-                Exit Function
-            Else
-                fe.F1CabeceraCantReg = 1
-                fe.F1CabeceraPtoVta = c.puntoVenta
-                fe.F1CabeceraCbteTipo = c.id_tipoComprobante  'FACTURA A/B/NC
-
-                fe.f1Indice = 0
-                fe.F1DetalleConcepto = 1
-                fe.F1DetalleDocTipo = cl.id_tipoDocumento     'CUIT/CUIL/DNI
-                fe.F1DetalleDocNro = cl.dni    'CUIT
-                fe.F1DetalleCbteDesde = c.numeroComprobante + 1
-                fe.F1DetalleCbteHasta = c.numeroComprobante + 1
-                fe.F1DetalleCbteFch = fechaAFIP()
-                fe.F1DetalleImpTotal = f.total
-                fe.F1DetalleImpTotalConc = 0
-                fe.F1DetalleImpNeto = f.subtotal
-                fe.F1DetalleImpOpEx = 0
-                fe.F1DetalleImpIva = f.impuestos 'p.iva
-                fe.F1DetalleMonId = "PES"
-                fe.F1DetalleMonCotiz = 1
-
-                fe.F1DetalleIvaItemCantidad = 1
-                fe.f1IndiceItem = 0
-                '20220728
-                'Select Case c.id_tipoComprobante
-                '    Case Is = 1, 2, 3, 4, 5, 63, 34, 39, 60, 51, 52, 53, 54
-                fe.F1DetalleIvaId = 5 'IVA 21/ IVA 10.5
-                '    Case Else
-                '        fe.F1DetalleIvaId = 3 'IVA 0
-                'End Select
-
-                'Ajusta el tipo de IVA del documento si no tiene IVA
-                '                If f.subtotal = f.total And f.impuestos = 0 Then fe.F1DetalleIvaId = 3
-
-                fe.F1DetalleIvaBaseImp = f.subtotal
-                fe.F1DetalleIvaImporte = f.impuestos 'p.iva
-
-                fe.ArchivoXMLRecibido = "c:\recibido.xml"
-                fe.ArchivoXMLEnviado = "c:\enviado.xml"
-
-                lResultado = fe.F1CAESolicitar()
-                '     MsgBox(fe.FERespuetaDetalleMotivo)
-                'fe.FECabeceraCantReg = 1
-                'lResultado = fe.Registrar(c.puntoVenta, c.id_tipoComprobante, p.id_pedido)
-
-                If lResultado And fe.F1RespuestaDetalleCae <> "" Then
-                    'Si obtuvo el CAE
-                    'Actualizo la DB y al pedido le pongo el CAE y la fecha de vencimiento 
-                    'Dim ce As New comprobante
-                    'ce = info_comprobante(p.id_comprobante)
-                    c.numeroComprobante = c.numeroComprobante + 1
-                    updatecomprobante(c)
-
-                    f.id_pedido = p.id_pedido
-                    f.id_comprobante = c.id_comprobante
-                    f.cae = fe.F1RespuestaDetalleCae
-                    f.fechavencimiento_cae = fechaAFIP_fecha(fe.F1RespuestaDetalleCAEFchVto)
-                    f.puntoVenta = c.puntoVenta
-                    f.numeroComprobante = c.numeroComprobante
-                    f.codigoDeBarras = generarCodigoDeBarras(cuit_emisor_default, f.numeroComprobante, f.puntoVenta, f.cae, fe.F1RespuestaDetalleCAEFchVto) '22092020
-                    fe.F1DetalleQRArchivo = Application.StartupPath + "\QR\" + fe.F1RespuestaDetalleCae + ".jpg"
-                    fe.f1detalleqrformato = 6
-                    fe.f1detalleqrresolucion = 4
-                    fe.f1detalleqrtolerancia = 1
-                    fe.f1detalleqrformato = 6
-                    f.fecha_emision = Format(DateTime.Now, "dd/MM/yyyy")
-                    'f.fecha_emision = Format(DateTime.Now, "MM/dd/yyyy")
-
-                    p.cerrado = True
-                    p.activo = False
-                    'updatepedido(p)
-
-                    emiteFE(f)
-                    If fe.f1qrGenerar(99) Then
-                        Guardar_QR_DB(Application.StartupPath + "\QR\" + fe.F1RespuestaDetalleCae + ".jpg", p.id_pedido)
-                    End If
-                    imprimirFactura(p.id_pedido, c.esPresupuesto, c.emiteRemito)
-                    Return 1
-                Else
-                    If Not c.testing Then
-                        MsgBox(errorFE(fe, c))
-                        Return 0 'Si no está en modo testing devuelve error
-                    End If
-                End If
-                'Si es un test me devuelve la información de los errores
-                'Consulta del último comprobante autorizado
-                'MsgBox("El número del último comprobante autorizado para: " + c.comprobante + " es: " + fe.F1CompUltimoAutorizado(c.puntoVenta, c.id_tipoComprobante).ToString)
-                'MsgBox("resultado global AFIP: " + fe.F1RespuestaResultado)
-                'MsgBox("es reproceso? " + fe.F1RespuestaReProceso)
-                'MsgBox("registros procesados por AFIP: " + Str(fe.F1RespuestaCantidadReg))
-                'MsgBox("error genérico global:" + fe.f1ErrorMsg1)
-                MsgBox(errorFE(fe, c))
-                If fe.F1RespuestaCantidadReg > 0 Then
-                    fe.f1Indice = 0
-                    MsgBox(errorFE(fe, c))
-                    If fe.F1RespuestaDetalleCae = "" Then Return 0 Else Return 1
-                End If
-                Return 0
-            End If
+        Dim ticket As LoginTicket
+        Dim urlWsaa As String = If(c.testing, "https://wsaahomo.afip.gov.ar/ws/services/LoginCms?WSDL", "https://wsaa.afip.gov.ar/ws/services/LoginCms?WSDL")
+        Dim urlWsfe As String = If(c.testing, "https://wswhomo.afip.gov.ar/wsfev1/service.asmx", "https://servicios1.afip.gov.ar/wsfev1/service.asmx")
+
+        ticket = ObtenerTicket("wsfe", urlWsaa, archivo_certificado, password_certificado)
+
+        Dim cab As New wsfev1.FECAECabRequest
+        cab.CantReg = 1
+        cab.CbteTipo = c.id_tipoComprobante
+        cab.PtoVta = c.puntoVenta
+
+        Dim det As New wsfev1.FECAEDetRequest
+        det.Concepto = 1
+        det.DocTipo = cl.id_tipoDocumento
+        det.DocNro = cl.dni
+        det.CbteDesde = c.numeroComprobante + 1
+        det.CbteHasta = c.numeroComprobante + 1
+        det.CbteFch = fechaAFIP()
+        det.ImpTotal = f.total
+        det.ImpTotConc = 0
+        det.ImpNeto = f.subtotal
+        det.ImpOpEx = 0
+        det.ImpIVA = f.impuestos
+        det.MonId = "PES"
+        det.MonCotiz = 1
+        Dim iva As New wsfev1.AlicIva
+        iva.Id = 5
+        iva.BaseImp = f.subtotal
+        iva.Importe = f.impuestos
+        det.Iva = New wsfev1.AlicIva() {iva}
+
+        Dim req As New wsfev1.FECAERequest
+        req.FeCabReq = cab
+        req.FeDetReq = New wsfev1.FECAEDetRequest() {det}
+
+        Dim resp As wsfev1.FECAEResponse = SolicitarCAE(ticket, req, CLng(cuit_emisor), urlWsfe)
+
+        If resp.FeCabResp IsNot Nothing AndAlso resp.FeCabResp.Resultado = "A" Then
+            c.numeroComprobante = c.numeroComprobante + 1
+            updatecomprobante(c)
+
+            f.id_pedido = p.id_pedido
+            f.id_comprobante = c.id_comprobante
+            f.cae = resp.FeDetResp(0).CAE
+            f.fechavencimiento_cae = fechaAFIP_fecha(resp.FeDetResp(0).CAEFchVto)
+            f.puntoVenta = c.puntoVenta
+            f.numeroComprobante = c.numeroComprobante
+            f.codigoDeBarras = generarCodigoDeBarras(cuit_emisor_default, f.numeroComprobante, f.puntoVenta, f.cae, resp.FeDetResp(0).CAEFchVto)
+            f.fecha_emision = Format(DateTime.Now, "dd/MM/yyyy")
+            p.cerrado = True
+            p.activo = False
+            emiteFE(f)
+            imprimirFactura(p.id_pedido, c.esPresupuesto, c.emiteRemito)
+            Return 1
         Else
-            MsgBox(fe.UltimoMensajeError)
+            MsgBox("Error al obtener CAE", vbCritical)
             Return 0
         End If
         '************** FACTURA ELECTRONICA ************** 
     End Function
 
     Public Sub imprimirFactura(ByVal id_pedido As Integer, ByVal esPresupuesto As Boolean, ByVal imprimeRemito As Boolean)
         'If showrpt Then
         id = id_pedido
         Dim frm As New frm_reportes(esPresupuesto, imprimeRemito)
         frm.ShowDialog()
         id = 0
         '        End If
     End Sub
 
     Public Function generarCodigoDeBarras(ByVal cuit_emisor As String, ByVal numeroComprobante As String, ByVal puntoVenta As String, ByVal cae As String, ByVal _
                                             fechaVencimiento_cae As String) As String
         Dim I As Long
         Dim Cod As String
         Dim Impares As Long = 0
         Dim Pares As Long = 0
         Dim Impares3 As Long
         Dim Total As Long
         Dim digitoVerificador As Integer
         Dim codigoDeBarras As String
 
@@ -195,134 +145,104 @@ Module factura
         For I = 1 To Cod.Length
             If I Mod 2 = 0 Then
                 ' Si el valor de I es par entra por aca
                 Pares = Pares + CLng(Mid(Cod, I, 1))
             Else
                 'Si el valor de I es impar entra por aca
                 Impares = Impares + CLng(Mid(Cod, I, 1))
             End If
         Next I
 
         'Me.TxtImpares.Text = Impares
         'Me.TxtPares.Text = Pares
         'Me.Txt3Impares.Text = 3 * CLng(Me.TxtImpares.Text)
         Impares3 = 3 * CLng(Impares)
         'Me.TxtTotal.Text = CLng(Me.TxtPares.Text) + CLng(Me.Txt3Impares.Text)
         Total = CLng(Pares) + CLng(Impares3)
 
         'Me.TxtDigito.Text = 10 - (CLng(Me.TxtTotal.Text) Mod 10)
         digitoVerificador = 10 - (CLng(Total) Mod 10)
 
         'Me.TxtCodBarraF.Text = Cod & Me.TxtDigito.Text
         codigoDeBarras = Cod & digitoVerificador
         Return codigoDeBarras
     End Function
     Public Function consultaUltimoComprobante(ByVal puntoVenta As String, ByVal tipoComprobante As String, ByVal esTest As Boolean) As Integer
-        Dim fe As New WSAFIPFE.Factura
-        Dim resultadoTicket As Boolean
-
         If Not inicialesFE(esTest) Then
             Return -1
         End If
 
-        If fe.iniciar(modo, cuit_emisor, archivo_certificado, archivo_licencia) Then
-            fe.ArchivoCertificadoPassword = password_certificado
-            If Not fe.f1TicketEsValido Then
-                resultadoTicket = fe.f1ObtenerTicketAcceso()
-                If Not resultadoTicket Then
-                    Return -1
-                End If
-            Else
-                resultadoTicket = True
-            End If
-
-            If resultadoTicket Then
-                Return fe.F1CompUltimoAutorizado(puntoVenta, tipoComprobante)
-            Else
-                Return -1
-            End If
-        Else
-            Return -1
-        End If
+        Dim urlWsaa As String = If(esTest, "https://wsaahomo.afip.gov.ar/ws/services/LoginCms?WSDL", "https://wsaa.afip.gov.ar/ws/services/LoginCms?WSDL")
+        Dim urlWsfe As String = If(esTest, "https://wswhomo.afip.gov.ar/wsfev1/service.asmx", "https://servicios1.afip.gov.ar/wsfev1/service.asmx")
+        Dim ticket As LoginTicket = ObtenerTicket("wsfe", urlWsaa, archivo_certificado, password_certificado)
+        Dim svc As New wsfev1.Service()
+        svc.Url = urlWsfe
+        Dim auth As New wsfev1.FEAuthRequest()
+        auth.Token = ticket.Token
+        auth.Sign = ticket.Sign
+        auth.Cuit = CLng(cuit_emisor)
+        Dim resp As wsfev1.FERecuperaLastCbteResponse = svc.FECompUltimoAutorizado(auth, puntoVenta, tipoComprobante)
+        Return resp.CbteNro
     End Function
 
-    Private Function errorFE(ByVal fe As WSAFIPFE.Factura, ByVal c As comprobante) As String
-        Dim errorStr As String
-        errorStr = "Último comprobante autorizado para: " + c.comprobante + " es: " + fe.F1CompUltimoAutorizado(c.puntoVenta, c.id_tipoComprobante).ToString
-        errorStr += vbCr + "Último comprobante en la DB: " + c.comprobante + " es: " + c.numeroComprobante.ToString
-        errorStr += vbCr + "Resultado global AFIP: " + fe.F1RespuestaResultado
-        errorStr += vbCr + "Es reproceso? " + fe.F1RespuestaReProceso
-        errorStr += vbCr + "Registros procesados por AFIP: " + Str(fe.F1RespuestaCantidadReg)
-        errorStr += vbCr + "Error genérico global:" + fe.f1ErrorMsg1
-        errorStr += vbCr + "Último error informado:" + fe.UltimoMensajeError
-        Return errorStr
-    End Function
 
     Private Function inicialesFE(ByVal esTest As Boolean) As Boolean
         pc = SystemInformation.ComputerName
 
         If esTest Then
-            modo = WSAFIPFE.Factura.modoFiscal.Test
-
             Select Case pc
                 Case Is = "JARVIS"
                     archivo_certificado = Application.StartupPath + "\Certificados\JarvisCert.p12"
                 Case Is = "SERVTEC-06"
                     archivo_certificado = Application.StartupPath + "\Certificados\JarvisCert.p12"
                 Case Is = "DOCTOROIL-C"
                     archivo_certificado = Application.StartupPath + "\Certificados\DROilPCTest.pfx"
                 Case Is = "DOCTOROIL-M"
                     archivo_certificado = Application.StartupPath + "\Certificados\DOCTOROIL-M_TEST.pfx"
                 Case Else
                     MsgBox("PC no habilitada para emitir documentos de testing.", vbCritical + vbOKOnly, "Centrex")
                     Return False
             End Select
-            archivo_licencia = ""
         Else
-            modo = WSAFIPFE.Factura.modoFiscal.Fiscal
             Select Case pc
                 Case Is = "JARVIS"
                     archivo_certificado = Application.StartupPath + "\Certificados\JARVIS.pfx"
                 Case Is = "SERVTEC-06"
                     archivo_certificado = Application.StartupPath + "\Certificados\nohaycertificado.pfx"
                 Case Is = "DOCTOROIL-C"
                     archivo_certificado = Application.StartupPath + "\Certificados\DROilPCOk.pfx"
                 Case Is = "DOCTOROIL-M"
                     archivo_certificado = Application.StartupPath + "\Certificados\DOCTOROIL-M.pfx"
                 Case Else
                     MsgBox("PC no habilitada para emitir documentos de testing.", vbCritical + vbOKOnly, "Centrex")
                     Return False
             End Select
-            archivo_licencia = Application.StartupPath + "\Certificados\WSAFIPFE.lic"
         End If
 
         If Not File.Exists(archivo_certificado) Then
             MsgBox("No existe el archivo del certificado, no podrá continuar.", vbCritical + vbOKOnly, "Centrex")
             Return False
-        ElseIf Not File.Exists(archivo_licencia) Then
-            MsgBox("No existe el archivo de la licencia, no podrá continuar.", vbCritical + vbOKOnly, "Centrex")
-            Return False
         End If
 
         cuit_emisor = cuit_emisor_default
         password_certificado = "Ladeda78"
         Return True
     End Function
 
     'Public Function facturaTest() As Integer
     '    'SI DEVUELVE 1 ESTÁ TODO OK
     '    'SI DEVUELVE 0 HUBO UN ERROR
 
     '    '************** FACTURA ELECTRONICA ************** 
 
     '    Dim modo As String
     '    Dim cuit_emisor As String
     '    Dim archivo_certificado As String
     '    Dim archivo_licencia As String
     '    Dim password_certificado As String
     '    Dim resultadoTicket As Boolean
 
     '    'Dim lResultado As Boolean
     '    Dim fe As New WSAFIPFE.Factura
 
     '    modo = WSAFIPFE.Factura.modoFiscal.Fiscal
     '    archivo_certificado = "D:\Dropbox\Golosinas Gabriel\Certificados\GGFE_produccion.pfx"
@@ -353,85 +273,28 @@ Module factura
 
     Public Function Guardar_QR_DB(ByVal archivo_imagen As String, ByVal id_pedido As Integer)
         Dim ds As New DataSet
         Dim con As New SqlClient.SqlConnection("Server=" + serversql + ";Database=" + basedb + ";Uid=" + usuariodb + ";Password=" + passdb)
         Dim img As Image
         Dim ms As New System.IO.MemoryStream
         Dim md As Byte()
         Dim sqlstr As String
         Dim param As New SqlClient.SqlParameter("@qr", SqlDbType.Image)
         con.Open()
         sqlstr = "UPDATE FE SET fc_qr = @qr WHERE id_pedido = '" + id_pedido.ToString + "'"
         Dim cmd As New SqlClient.SqlCommand(sqlstr, con)
 
         img = Image.FromFile(archivo_imagen)
 
         img.Save(ms, System.Drawing.Imaging.ImageFormat.Jpeg)
         md = ms.GetBuffer
 
         param.Value = md
         cmd.Parameters.Add(param)
         cmd.ExecuteNonQuery()
         con.Close()
         Return 0
     End Function
 
-    Private Function Resultado_Ticket_acceso(ByRef fe As WSAFIPFE.Factura) As Boolean
-        Dim resultadoTicket As Boolean
-        fe.tls = 12
-        fe.ArchivoCertificadoPassword = password_certificado
-
-        If fe.f1TicketEsValido Then
-            If My.Computer.FileSystem.FileExists(Application.StartupPath + "\ticketAccesoFE.jav") Then
-                fe.f1RestaurarTicketAcceso(leerArchivoTexto(Application.StartupPath + "\ticketAccesoFE.jav"))
-            End If
-            Return 1
-        Else
-            resultadoTicket = fe.f1ObtenerTicketAcceso()
-            guardarArchivoTexto(Application.StartupPath + "\ticketAccesoFE.jav", fe.f1GuardarTicketAcceso)
-            If Not resultadoTicket Then
-                Return 0
-            Else
-                Return 1
-            End If
-        End If
-    End Function
-
-    Public Sub Consultar_Comprobante(ByVal pVenta As Integer, ByVal tipo_comprobante As Integer, ByVal nComprobante As String)
-        Dim fe As New WSAFIPFE.Factura
-        Dim resultado As Boolean
-        Dim respuestaCAE As String
-
-        If Not inicialesFE(0) Then
-            MsgBox("Hubo un problema al inicializar el webservice, puede ser un problema de certificados", vbCritical + vbOKOnly, "Centrex")
-            Exit Sub
-        End If
-
-        If fe.iniciar(modo, cuit_emisor, archivo_certificado, archivo_licencia) Then
-            If Not Resultado_Ticket_acceso(fe) Then
-                MsgBox("Error al obtener el ticket de acceso, con el siguiente error: " + fe.UltimoMensajeError)
-                Exit Sub
-            Else
-                fe.F1CabeceraCantReg = 1
-                fe.f1Indice = 0
-                fe.f1IndiceItem = 0
-                fe.F1DetalleQRArchivo = Application.StartupPath + "\QR\" + nComprobante + ".jpg"
-                fe.f1detalleqrformato = 6
-                fe.f1detalleqrresolucion = 20
-                fe.f1detalleqrtolerancia = 3
-                fe.ArchivoXMLRecibido = "c:\recibido.xml"
-                resultado = fe.F1CompConsultar(pVenta, tipo_comprobante, nComprobante)
-                If fe.UltimoMensajeError = "" Then
-                    respuestaCAE = "CAE consultado: " + fe.F1RespuestaDetalleCae + vbCrLf
-                    respuestaCAE += "Total: " + Str(fe.F1DetalleImpTotal)
-                    MsgBox(respuestaCAE, vbInformation + vbOKOnly, "Centrex")
-                Else
-                    MsgBox("Fallo la consulta con el siguiente error:" + fe.UltimoMensajeError)
-
-                End If
-            End If
-        Else
-            MsgBox("Fallo al iniciar el webservice con el siguiente error: " + fe.UltimoMensajeError)
-        End If
-    End Sub
+    'Función de ticket y consulta de comprobantes removida al utilizar la implementacion nativa de AFIP
     '************** FACTURA ELECTRONICA ************** 
 End Module
 
EOF
)